openapi: 3.0.1
info:
  title: API ООО "Архангельский морской торговый порт"
  description: |-
    ООО "Архангельский морской торговый порт" предоставляет API для запроса и получения информации о различных аспектах портовой деятельности. API позволяет получить характеристики судов, информацию о прибытии и отправлении в порт, данные по грузам, положения судов флота, а также финансовую информацию.
    Ссылки:
    - [Сайт ООО "АМТП"](https://амтп.рф)
    - [Личный кабинет клиента ООО "АМТП"](https://амтп.рф/#modal-auth-form)
    - [API документация ООО "АМТП"](https://амтп.рф/doc/openapi.yaml)
  
  termsOfService: https://ascp.ru/upload/documents/privacy-policy.pdf
  contact:    
    email: dev@ascp.ru
  version: 1.0.2
servers:
  - url: http://1c-srv.corp.ascp.ru/ugt-dev-7/hs/v2/   

tags:
  - name: Характеристики судна
    description: Характеристики судна.
  - name: Информация о порте
    description: Получить информацию о прибытии и отправлении в пор.
  - name: Cargo Information
    description: Информация о грузах
  - name: Авторизация 
    description: Авторизация
  - name: Управление пользователями
    description: Операции по управлению пользователями системы.
  - name: Информация о клиенте
    description: Информация о клиенте

security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Код ошибки
        message:
          type: string
          description: Сообщение об ошибке
    ShipData:
      type: object
      properties:
        ship_id:
          type: string
          description: ID корабля
        ship_name:
          type: string
          description: Название корабля
        imo:
          type: string
          description: IMO номер судна
        callsign:
          type: string
          description: Позывной судна
        ship_type:
          type: string
          description: Тип судна
        dwt:
          type: number
          description: Водоизмещение (DWT)
        teu:
          type: number
          description: Вместимость TEU
        width:
          type: number
          description: Ширина судна
        draft:
          type: number
          description: Осадка судна
        length:
          type: number
          description: Длина судна
        owner:
          type: string
          description: Владелец судна
        flag:
          type: string
          description: Флаг судна
        last_modified_date:
          type: string
          format: date-time
          description: Дата последнего изменения карточки судна        
    ShipPhoto:
      type: object
      properties:
        photo:
          type: string
          format: binary
          description: Фото судна в двоичном формате
        upload_time:
          type: string
          format: date-time
          description: Дата и время добавления фото в БД
        is_main:
          type: boolean
          description: Является ли фото основным для судна
    VesselArrival:
      type: object
      properties:
        vessel_id:
          type: string
          description: ID судозахода
        terminal_id:
          type: string
          description: ID терминала
        terminal_name:
          type: string
          description: Терминал
        berth_id:
          type: string
          description: ID причала
        berth_name:
          type: string
          description: Причал
        ship_id:
          type: string
          description: ID судна
        ship_name:
          type: string
          description: Название судна
        cargo_quantity:
          type: number
          description: Количество груза
        type_prr:
          type: string
          description: Вид ПРР
          enum:
            - Погрузка 
            - Выгрузка
        planned_arrival_date:
          type: string
          format: date-time
          description: Плановая дата прибытия
        actual_arrival_date:
          type: string
          format: date-time
          description: Фактическая дата прибытия
        planned_departure_date:
          type: string
          format: date-time
          description: Плановая дата ухода
        actual_departure_date:
          type: string
          format: date-time
          description: Фактическая дата ухода
        status:
          type: string
          description: Статус судозахода
          enum:
            - Ожидается
            - Прибыл
            - Разгрузка
            - Погрузка
            - Отправляется
            - Ушел
            - Задержан
            - Отменен
            - В пути
    BerthInformation:
      type: object
      properties:
        berth_id:
          type: string
          description: ID причала
        berth_name:
          type: string
          description: Название причала
        terminal_id:
          type: string
          description: ID терминала
        coordinates:
          type: object
          description: Координаты причала на карте
          properties:
            latitude:
              type: number
              description: Широта
            longitude:
              type: number
              description: Долгота
        characteristics:
          type: object
          description: Характеристики причала
          properties:
            length:
              type: number
              description: Длина причала (в метрах)
            depth:
              type: number
              description: Глубина причала (в метрах)
            capacity:
              type: number
              description: Вместимость причала (в тоннах)
    TerminalCharacteristics:
      type: object
      properties:
        terminal_id:
          type: string
          description: Уникальный идентификатор терминала
        terminal_name:
          type: string
          description: Название терминала
        capacity:
          type: number
          description: Вместимость терминала (в контейнерах, тоннах и т.д.)
        throughput:
          type: number
          description: Пропускная способность терминала (в контейнерах в час, тоннах в сутки и т.д.)
        equipment:
          type: array
          items:
            type: string
          description: Список оборудования терминала
        services:
          type: array
          items:
            type: string
          description: Список предоставляемых услуг терминала
        berths:
          type: object
          properties:
            count:
              type: integer
              description: Количество причалов
            length:
              type: number
              description: Протяженность причалов (в метрах)
            draft:
              type: number
              description: Осадка судна (в метрах)
    CargoStatusByRequestNumber:
      type: array
      description: Массив статусов груза
      items:
        type: object
        properties:
          status:
            type: string
            description: Текущий статус груза
            enum:
              - Ожидается
              - Прибыл
              - Разгрузка
              - Хранение
              - Отгрузка
              - Убыл
          timestamp:
            type: string
            format: date-time
            description: Временная метка статуса груза
          comment: 
            type: string
            description: Комментарий по операции с грузом
      required:
        - items
    CargoUnit:
      type: object
      properties:
        # id:
        #   type: string
        #   description: Уникальный идентификатор грузового места
        name:
          type: string
          description: Наименование грузового места
        cargoType:
          type: string
          description: Тип груза
          enum:
            - Насыпной
            - Генеральный
        volume:
          type: number
          format: float
          description: Объем грузового места в кубических метрах (м³)
        weight:
          type: number
          format: float
          description: Вес грузового места в килограммах
        dimensions:
          type: object
          description: Весогабаритные характеристики грузового места
          properties:
            length:
              type: number
              format: float
              description: Длина грузового места в метрах
            width:
              type: number
              format: float
              description: Ширина грузового места в метрах
            height:
              type: number
              format: float
              description: Высота грузового места в метрах
        conditions:
          type: string
          description: Условия хранения груза
        unNumber:
          type: string
          description: Номер ООН для опасных грузов
        dangerClass:
          type: string
          description: Класс опасности груза
        markNumber:
          type: string
          description: Номер пломбы, если есть
        isValuable:
          type: boolean
          description: Признак особо ценного груза      
      required:
        - cargo_type
        - name
        - weight
        - dimensions

    DocumentType:
      type: object
      properties:
        typeId:
          type: string
          description: Уникальный идентификатор типа документа
          example: "1"
        typeName:
          type: string
          description: Название типа документа
          example: "Приемный акт порта"
        requestType:
          type: string
          description: Тип документа
          enum:
            - Приемный акт
            - ЖДН
            - ТН

    RequestType:
      type: object
      properties:
        typeId:
          type: string
          description: Уникальный идентификатор типа заявки
          example: "1"
        typeName:
          type: string
          description: Название типа завки
          example: "Заявка на ввоз груза автомобилем"
        requestType:
          type: string
          description: Тип заявки
          enum:
            - Заявка на ввоз груза
            - Заявка на вывоз груза
            - Заявка на пропуск в порт
            - Заявка на Погрузка автомобиля
            - Заявка на Погрузка судна
            - Заявка на Погрузка вагона
            - Заявка на выгрузка автомобиля
            - Заявка на выгрузка судна
            - Заявка на выгрузка вагона
            - Заявка на складские операции


paths:
  /ship/findByName:
    get:
      tags: 
        - Характеристики судна
      summary: Получить характеристики морского судна по названию
      description: Возвращает характеристики морского судна по заданному названию.
      parameters:
        - name: ship_name
          in: query
          description: Название морского судна
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipData'
        '404':
          description: Судно не найдено
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Описание ошибки
  /ship/findById:
    get:
      tags: 
        - Характеристики судна
      summary: Получить характеристики морского судна по ID
      description: Возвращает характеристики морского судна по заданному ID.
      parameters:
        - name: ship_id
          in: query
          description: ID морского судна
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipData'
        '404':
          description: Судно не найдено
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Описание ошибки
  /ship/getVessels:
    get:
      tags: 
        - Характеристики судна
      summary: Получить список всех судов
      description: Возвращает список всех доступных морских судов.
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipData'
        '404':
          description: Суда не найдены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Описание ошибки          
  /ship/getPhotos:
    get:
      tags: 
        - Характеристики судна
      summary: Получить все фото судна по ID
      description: Возвращает все фото судна по заданному ID.
      parameters:
        - name: ship_id
          in: query
          description: ID морского судна
          required: true
          schema:
            type: string
        - name: start_date
          in: query
          description: Дата, начиная с которой нужно получить фотографии
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipPhoto'
        '404':
          description: Судно не найдено
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Описание ошибки          
  /port/portCalls:
    get:
      tags:
        - Информация о порте
      summary: Получить информацию о судозаходах в указанном порту за указанный период
      description: Возвращает информацию о прибытии и отправлении судов в указанном порту за заданный период времени.
      parameters:
        - name: terminal_id
          in: query
          description: ID терминала
          required: false
          schema:
            type: string
        - name: start_date
          in: query
          description: Начальная дата
          required: true
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          description: Конечная дата
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VesselArrival'
        '404':
          description: Порт не найден     
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Описание ошибки          
  /port/getBerth:
    get:
      tags:
        - Информация о порте
      summary: Получить информацию о причалах порта
      description: Возвращает информацию о причалах морского порта с указанием координат на Яндекс.Картах и другими характеристиками.
      parameters:
        - name: terminal_id
          in: query
          description: ID терминала
          required: true
          schema:
            type: string
        - name: berth_id
          in: query
          description: ID причала
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BerthInformation'
        '404':
          description: Порт не найден  
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Описание ошибки          
  /port/getTerminal:
    get:
      tags:
        - Информация о порте
      summary: Получить информацию о характеристиках терминала порта
      description: Возвращает информацию о характеристиках терминала порта.
      parameters:
        - name: terminal_id
          in: query
          description: ID терминала
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalCharacteristics'
        '404':
          description: Терминал не найден  
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Описание ошибки
  /port/getBerthList:
    get:
      tags:
        - Информация о порте
      summary: Получить список причалов по ID терминала
      description: Возвращает список всех причалов в указанном терминале порта.
      parameters:
        - name: terminal_id
          in: query
          description: ID терминала
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BerthInformation'
        '404':
          description: Порт не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Описание ошибки
  /port/getTerminalList:
    get:
      tags:
        - Информация о порте
      summary: Получить список всех терминалов порта
      description: Возвращает список всех терминалов морского порта с их характеристиками.
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TerminalCharacteristics'
  /cargo/getStatusByRequestNumber:
    get:
      tags:
        - Cargo Information
      summary: Получить статус груза по номеру заявки клиента
      description: Возвращает статус груза вместе с временной меткой по номеру заявки клиента.
      parameters:
        - name: request_number
          in: query
          description: Номер заявки клиента на груз
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CargoStatusByRequestNumber'
        '404':
          description: Груз по данному номеру заявки не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Описание ошибки
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Описание ошибки     
  /cargo/getCargoUnitById:
    get:
      tags:
        - Cargo Information
      summary: Получить характеристики грузового места по ID
      description: Возвращает характеристики грузового места по заданному уникальному идентификатору.
      parameters:
        - name: guid
          in: query
          description: Уникальный идентификатор грузового места
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CargoUnit'
        '404':
          description: Грузовое место не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /auth/login:
    post:
      tags:
        - Авторизация
      summary: Авторизация пользователя
      description: >
        Эндпоинт позволяет пользователю авторизоваться в системе, используя логин и пароль, для получения JWT токена.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []         
      responses:
        '200':
          description: Аутентификация прошла успешно. Возвращает JWT токен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT токен для доступа к API.
                  token_type:
                    type: string
                    default: "Bearer"
                    description: Тип токена.
                  expires_in:
                    type: integer
                    description: Время действия токена в секундах.
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/logout:
    post:
      tags:
        - Авторизация
      summary: Выход из системы
      description: Позволяет пользователю завершить сессию и выйти из системы.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешный выход из системы
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном выходе из системы
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /users/create:
    post:
      tags:
        - Управление пользователями
      summary: Создание нового пользователя
      description: Позволяет администратору создать нового пользователя в системе.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  description: Полное имя пользователя
                position:
                  type: string
                  description: Должность пользователя в организации                  
                email:
                  type: string
                  format: email
                  description: Электронная почта пользователя
                role:
                  type: string
                  description: Роль пользователя в системе
                  enum:
                    - admin
                    - user
                    - manager
                    - guest
              required:
                - fullname
                - position
                - email
                - role
      responses:
        '201':
          description: Новый пользователь успешно создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: Уникальный идентификатор созданного пользователя
                  message:
                    type: string
                    description: Сообщение о успешном создании пользователя
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/list:
    get:
      tags:
        - Управление пользователями
      summary: Получение списка пользователей организации
      description: Позволяет получить список всех пользователей, принадлежащих указанной организации.
      security:
        - ApiKeyAuth: []
        - bearerAuth: [] 
      responses:
        '200':
          description: Список пользователей организации успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                      description: Уникальный идентификатор пользователя
                    username:
                      type: string
                      description: Имя пользователя для входа в систему
                    email:
                      type: string
                      format: email
                      description: Электронная почта пользователя
                    fullname:
                      type: string
                      description: Полное имя пользователя
                    position:
                      type: string
                      description: Должность пользователя в организации
                    role:
                      type: string
                      description: Роль пользователя в системе
                      enum:
                        - admin
                        - user
                        - manager
                        - guest
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/{userId}:
    delete:
      tags:
        - Управление пользователями
      summary: Удаление пользователя
      description: Позволяет администратору удалить пользователя из системы.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []  
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: Уникальный идентификатор пользователя для удаления
      responses:
        '200':
          description: Пользователь успешно удален
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном удалении пользователя
        '401':
          description: Неверный запрос, отсутствуют необходимые данные или данные некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Доступ запрещен. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Управление пользователями
      summary: Получение данных пользователя
      description: Позволяет получить данные пользователя по его уникальному идентификатору.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []  
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: Уникальный идентификатор пользователя для получения данных
      responses:
        '200':
          description: Данные пользователя успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: Уникальный идентификатор пользователя
                  fullname:
                    type: string
                    description: Полное имя пользователя
                  username:
                    type: string
                    description: Имя пользователя для входа в систему
                  email:
                    type: string
                    format: email
                    description: Электронная почта пользователя
                  position:
                    type: string
                    description: Должность пользователя в организации
                  lastLogin:
                    type: string
                    format: date-time
                    description: Дата и время 
                  role:
                    type: string
                    description: Роль пользователя в системе
                    enum:
                      - admin
                      - user
                      - manager
                      - guest
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Управление пользователями
      summary: Обновление данных пользователя
      description: Позволяет пользователю обновить свои личные данные.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: Уникальный идентификатор пользователя для обновления данных
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  description: Новое полное имя пользователя
                email:
                  type: string
                  format: email
                  description: Новая электронная почта пользователя
                position:
                  type: string
                  description: Должность пользователя в организации
                newPassword:
                  type: string
                  description: Новый пароль пользователя                

      responses:
        '200':
          description: Данные пользователя успешно обновлены
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном обновлении данных пользователя
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /clients/getClientInfo:
    get:
      tags:
        - Информация о клиенте
      summary: Получение данных о клиенте
      description: Позволяет получить данные о клиенте, идентифицированной по API ключу.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []    
      responses:
        '200':
          description: Данные об организации успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  clientId:
                    type: string
                    description: Уникальный идентификатор клиента
                  name:
                    type: string
                    description: Название организации
                  address:
                    type: string
                    description: Юридический адрес организации
                  taxId:
                    type: string
                    description: Идентификационный номер налогоплательщика (ИНН) организации
                  registration:
                    type: string
                    description: Основной государственный регистрационный номер (ОГРН)
                  contacts:
                    type: array
                    items:
                      type: object
                      properties:
                        fullName:
                          type: string
                          description: ФИО контактного лица организации
                        position:
                          type: string
                          description: Должность контактного лица организации
                        phone:
                          type: string
                          description: Контактный телефон организации
                        email:
                          type: string
                          format: email
                          description: Контактный email организации
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /types/documents:
    get:
      tags:
        - Типы данных
      summary: Получить список типов документов
      description: Возвращает список всех доступных типов документов.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество элементов на странице
          required: false
          schema:
            type: integer
            default: 10    
      responses:
        '200':
          description: Список типов документов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalItems:
                    type: integer
                    description: Общее количество типов документов
                    example: 100
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                    example: 10
                  currentPage:
                    type: integer
                    description: Текущая страница
                    example: 1
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/DocumentType'
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Типы документов не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /types/requests:
    get:
      tags:
        - Типы данных
      summary: Получить список типов заявок
      description: Возвращает список всех доступных типов заявок.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество элементов на странице
          required: false
          schema:
            type: integer
            default: 10            
      responses:
        '200':
          description: Список типов документов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalItems:
                    type: integer
                    description: Общее количество типов документов
                    example: 100
                  totalPages:
                    type: integer
                    description: Общее количество страниц
                    example: 10
                  currentPage:
                    type: integer
                    description: Текущая страница
                    example: 1
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/RequestType'
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Типы заявок не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /dashboard/shipCargo:
    get:
      tags:
        - Дашборд
      summary: Формирование дашборда по отгрузке судна с грузами клиента
      description: >
        Эндпоинт для формирования дашборда по отгрузке судна с грузами клиента.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по отгрузке и погрузке успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      description: Дата
                    terminals:
                      type: array
                      description: Список терминалов порта с данными о погрузке и выгрузке
                      items:
                        type: object
                        properties:
                          terminal:
                            type: string
                            description: Терминал порта (например, Экономия, Бакарица)
                          load_weight:
                            type: number
                            format: float
                            description: Общий вес погруженных грузов
                          load_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы погрузки
                          unload_weight:
                            type: number
                            format: float
                            description: Общий вес выгруженных грузов
                          unload_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы выгрузки

        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/railCargo:
    get:
      tags:
        - Дашборд
      summary: Формирование дашборда по отгрузке и погрузке ЖД вагонов с грузами клиента
      description: >
        Эндпоинт для формирования дашборда по отгрузке и погрузке ЖД вагонов с грузами клиента в разрезе терминалов порта.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по отгрузке и погрузке успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      description: Дата
                    terminals:
                      type: array
                      description: Список терминалов порта с данными о погрузке и выгрузке
                      items:
                        type: object
                        properties:
                          terminal:
                            type: string
                            description: Терминал порта (например, Экономия, Бакарица)
                          load_weight:
                            type: number
                            format: float
                            description: Общий вес погруженных грузов
                          load_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы погрузки
                          unload_weight:
                            type: number
                            format: float
                            description: Общий вес выгруженных грузов
                          unload_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы выгрузки
                          processed_wagons:
                            type: integer
                            description: Количество обработанных вагонов
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/autoCargo:
    get:
      tags:
        - Дашборд
      summary: Формирование дашборда по отгрузке и погрузке автомобилей с грузами клиента
      description: >
        Эндпоинт для формирования дашборда по отгрузке и погрузке автомобилей с грузами клиента в разрезе терминалов порта.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по отгрузке и погрузке успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      description: Дата
                    terminals:
                      type: array
                      description: Список терминалов порта с данными о погрузке и выгрузке
                      items:
                        type: object
                        properties:
                          terminal:
                            type: string
                            description: Терминал порта (например, Экономия, Бакарица)
                          load_weight:
                            type: number
                            format: float
                            description: Общий вес погруженных грузов
                          load_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы погрузки
                          unload_weight:
                            type: number
                            format: float
                            description: Общий вес выгруженных грузов
                          unload_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы выгрузки
                          processed_auto:
                            type: integer
                            description: Количество обработанных автомобилей
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/warehouseCargo:
    get:
      tags:
        - Дашборд
      summary: Отображение количества груза клиента на складских комплексах терминалов порта
      description: >
        Эндпоинт для отображения количества (вес в тоннах и фрахтовых единицах) груза клиента на складских комплексах терминалов порта на определенную дату в виде гистограммы.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: date
          in: query
          description: Дата для отображения данных
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по грузам на складских комплексах успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    terminal:
                      type: string
                      description: Терминал порта (например, Экономия, Бакарица)
                    warehouse:
                      type: array
                      description: Складской комплекс
                      items: 
                        type: object
                        properties:
                          warehouse_zone:
                            type: string
                            description: Складская зона                        
                          cargo_weight:
                            type: number
                            format: float
                            description: Вес груза в тоннах
                          cargo_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы груза
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/containerOperations:
    get:
      tags:
        - Дашборд
      summary: Данные о количестве затаренных и растаренных контейнеров клиента
      description: >
        Эндпоинт для предоставления данных для дашборда о количестве затаренных и растаренных контейнеров клиента за период в разрезе терминалов и складских зон порта.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по контейнерным операциям успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    terminal:
                      type: string
                      description: Терминал порта (например, Экономия, Бакарица)
                    warehouse:
                      type: array
                      description: Список складских зон терминала с данными о контейнерных операциях
                      items:
                        type: object
                        properties:
                          warehouse_zone:
                            type: string
                            description: Складская зона
                          stuffed_containers:
                            type: integer
                            description: Количество затаренных контейнеров
                          stripped_containers:
                            type: integer
                            description: Количество растаренных контейнеров
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /documents/getClientDocuments:
    get:
      tags:
        - Журнал документов
      summary: Получить список документов клиента
      description: Возвращает список документов клиента из журнала БД с поддержкой пагинации.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []  
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество документов на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список документов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество документов
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество документов на странице
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        guid:
                          type: string
                          description: Уникальный идентификатор документа в БД
                          example: "9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241"
                        documentId:
                          type: string
                          description: Регистрационный номер документа
                          example: "0000098212"                          
                        documentName:
                          type: string
                          description: Название документа
                          example: "Приемный акт" 
                        documentType:
                          type: string
                          description: Тип операции
                          example: "Затарка" 
                        comment:
                          type: string
                          description: Комментарий к документу
                          example: "Стандартный груз"
                        attached:
                          type: boolean
                          description: Наличие прикрепленных файлов в документе 
                          example: true                         
                        createdDate:
                          type: string
                          format: date-time
                          description: Дата и время создания заявки
                required:
                  - total
                  - page
                  - pageSize
                  - requests
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Документы не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /documents:
    get:
      tags:
        - Журнал документов
      summary: Получить список документов клиента
      description: Возвращает список документов клиента из журнала БД с поддержкой пагинации.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []  
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество документов на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список документов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество документов
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество документов на странице
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        guid:
                          type: string
                          description: Уникальный идентификатор документа в БД
                          example: "9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241"
                        documentId:
                          type: string
                          description: Регистрационный номер документа
                          example: "0000098212"                          
                        documentName:
                          type: string
                          description: Название документа
                          example: "Приемный акт" 
                        documentType:
                          type: string
                          description: Тип операции
                          example: "Затарка" 
                        comment:
                          type: string
                          description: Комментарий к документу
                          example: "Стандартный груз"
                        attached:
                          type: boolean
                          description: Наличие прикрепленных файлов в документе 
                          example: true                         
                        createdDate:
                          type: string
                          format: date-time
                          description: Дата и время создания заявки
                required:
                  - total
                  - page
                  - pageSize
                  - requests
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Документы не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /requests:
    get:
      tags:
        - Журнал заявок
      summary: Получить список заявок клиента
      description: Возвращает список заявок клиента из журнала БД с поддержкой пагинации.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []  
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество заявок на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список заявок успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество заявок
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество заявок на странице
                  requests:
                    type: array
                    items:
                      type: object
                      properties:
                        guid:
                          type: string
                          description: Уникальный идентификатор документа в БД
                          example: "9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241"                      
                        requestId:
                          type: string
                          description: Регистрационный номер документа
                          example: "0000098212"
                        requestName:
                          type: string
                          description: Название документа
                          example: "Заявка на погрузку автомобиля" 
                        status:
                          type: string
                          description: Статус заявки
                          enum:
                            - Создана
                            - В обработке
                            - Одобрена
                            - Отклонена
                          example: "В обработке"
                        comment:
                          type: string
                          description: Комментарий к заявке
                          example: "Добавьте сканы документов"
                        createdDate:
                          type: string
                          format: date-time
                          description: Дата и время создания заявки
                required:
                  - total
                  - page
                  - pageSize
                  - requests
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявки не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests/{guid}:
    get:
      tags:
        - Журнал заявок
      summary: Получить данные конкретной заявки
      description: Возвращает данные конкретной заявки по guid (ID документа в БД).
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор документа в БД
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Данные заявки успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор документа в БД
                    example: "9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241"
                  requestId:
                    type: string
                    description: Регистрационный номер документа
                    example: "0000098212"
                  requestType:
                    type: string
                    $ref: '#/components/schemas/RequestType'                    
                    description: Тип заявки
                    example: "Заявка на погрузка судна"
                  requestName:
                    type: string
                    description: Название документа
                    example: "Заявка на погрузку судна"
                  status:
                    type: string
                    description: Статус заявки
                    enum:
                      - Создана
                      - В обработке
                      - Одобрена
                      - Отклонена
                    example: "В обработке"
                  comment:
                    type: string
                    description: Комментарий к заявке
                    example: "Добавьте сканы документов"
                  createdDate:
                    type: string
                    format: date-time
                    description: Дата и время создания заявки
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'





  /requests/{guid}/vesselload:
    get:
      tags:
        - Журнал заявок
      summary: Получить данные заявки по GUID
      description: Возвращает данные заявки по указанному GUID.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Данные заявки успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  applicationNumber:
                    type: string
                    description: Номер заявки
                  date:
                    type: string
                    format: date-time
                    description: Дата заявки
                  vessel:
                    type: string
                    description: Судно
                  client:
                    type: string
                    description: Клиент
                  shipper:
                    type: string
                    description: Грузоотправитель
                  servicePlace:
                    type: string
                    description: Место оказания услуги
                  responsible:
                    type: string
                    description: Ответственный
                  cargoList:
                    type: array
                    items:
                      type: object
                      properties:
                        receivingPoint:
                          type: string
                          description: Приемный акт
                        cargoPlace:
                          type: string
                          description: Грузовое место
                        quantity:
                          type: integer
                          description: Количество (места)
                        weight:
                          type: number
                          format: float
                          description: Вес (кг)
                        consignee:
                          type: string
                          description: Грузополучатель
                        destinationPort:
                          type: string
                          description: Порт назначения
                        transportContract:
                          type: string
                          description: Договор перевозки
                        printLoadingDocument:
                          type: boolean
                          description: Печатать погрузочный документ
                        printConsignment:
                          type: boolean
                          description: Печатать коносамент
                        printAcceptanceCertificate:
                          type: boolean
                          description: Печатать приемосдаточную / передаточную ведомость
                        urgent:
                          type: boolean
                          description: Срочный
                        direction:
                          type: string
                          description: Направление
                        cargoStatus:
                          type: string
                          description: Статус груза
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
