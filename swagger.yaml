openapi: 3.0.3
info:
  title: Документация API ООО "АМТП"
  description: >-
    ООО "Архангельский морской торговый порт" предоставляет API для запроса и
    получения информации о различных аспектах портовой деятельности. API
    позволяет получить характеристики судов, информацию о прибытии и отправлении
    в порт, данные по грузам, положения судов флота, а также финансовую
    информацию.

    Ссылки:

    - [Сайт ООО "АМТП"](https://амтп.рф)

    - [Личный кабинет клиента ООО "АМТП"](https://амтп.рф/#modal-auth-form)

    - [API документация ООО "АМТП"](https://амтп.рф/api/openapi.yaml)
  termsOfService: https://ascp.ru/upload/documents/privacy-policy.pdf
  contact:
    email: dev@ascp.ru
  version: 1.0.2
servers:
  - url: https://gate.ascp.ru:8443/Ugt-test/hs/v2/
    description: Сервер для тестирования
  - url: https://gate.ascp.ru:8443/ugt-dev-7/hs/v2/
    description: Сервер для разработчиков
tags:
  - name: Авторизация
    description: Авторизация
  - name: Управление пользователями
    description: Операции по управлению пользователями системы.
# security:
#   - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # Общий API токен сайта
    BasicAuth:
      type: apiKey
      in: header
      name: BasicAuth  # Используем для авторизации пользователя,'Basic {token}' (корявая Basic авторизация) 
    sessionAuth:
      type: apiKey
      in: header
      name: bearerAuth # Сессионный JWT токен который возвращает сервер      
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Код ошибки
        message:
          type: string
          description: Сообщение об ошибке
          example: Invalid request data
      required:
        - code
        - message
    Person:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор физлица
          example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
          readOnly: false
        fullName:
          type: string
          description: ФИО физического лица
          example: Шестак Денис Анатольевич
        birthDate:
          type: string
          format: date
          description: Дата рождения
          example: '1992-12-13'
        gender:
          type: string
          description: Пол
          example: Мужской
        position:
          type: string
          description: Должность
          example: ВОДИТЕЛЬ
        passport:
          type: object
          properties:
            series:
              type: string
              description: Серия и номер паспорта
              example: AB 3651652
            issuedBy:
              type: string
              description: Кем выдан паспорт
              example: Барановичский ГОВД Брестской обл.
            issueDate:
              type: string
              format: date
              description: Дата выдачи паспорта
              example: '2021-09-24'
        contactInfo:
          type: object
          properties:
            phone:
              type: string
              description: Телефон
              example: +7 123 456 7890
            email:
              type: string
              description: Электронная почта
              example: example@example.com
      required:
        - fullName
        - birthDate
        - gender
        - position
        - passport
    Auto:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор авто
          example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
          readOnly: true
        number:
          type: string
          description: Гос. номер автомобиля
          example: A770E067
        make:
          type: string
          description: Марка автомобиля
          example: Toyota
        model:
          type: string
          description: Модель автомобиля
          example: Camry
        owner:
          type: string
          description: Собственник автомобиля
          example: Иванов Иван Иванович
        vin:
          type: string
          description: VIN автомобиля
          example: 1HGCM82633A123456
        color:
          type: string
          description: Цвет автомобиля
          example: Черный
        trailer:
          type: object
          description: Информация о прицепе (если имеется)
          properties:
            licensePlate:
              type: string
              description: Гос. номер прицепа
              example: AK544367
            make:
              type: string
              description: Марка прицепа
              example: Schmitz
            model:
              type: string
              description: Модель прицепа
              example: S.KO
            vin:
              type: string
              description: VIN прицепа
              example: WDB93012345678901
            color:
              type: string
              description: Цвет прицепа
              example: Белый
      required:
        - number
        - licensePlate
        - make
        - owner
    Driver:
      allOf:
        - $ref: '#/components/schemas/Person'
        - type: object
          properties:
            auto:
              $ref: '#/components/schemas/Auto'
    Cargo:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор груза
          readOnly: true
          example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
        name:
          type: string
          description: Наименование грузового места
          example: Контейнер CAXU6600984
        nomenklatura:
          type: string
          description: Номенклатура груза
          example: Контейнер CAXU
        weight:
          type: number
          description: Вес груза
          example: 38000
        volume:
          type: number
          description: Объем груза
          example: 67.7
        length:
          type: number
          description: Длина груза
          example: 13.716
        width:
          type: number
          description: Ширина груза
          example: 2.438
        height:
          type: number
          description: Высота груза
          example: 2.896
        quantity: 
          type: number
          description: Количество мест груза
          example: 2
        cargoType:
          type: string
          description: Тип груза
          enum:
            - Генеральный груз
            - Контейнер
            - Насыпной/Навальный
          example: Контейнер
        packaging:
          type: string
          description: Род упаковки
          example: Отсутствует
        storageConditions:
          type: string
          description: Условия хранения
          example: Открытое
        hazardClass:
          type: string
          description: Класс опасности
          example: '1.2'
        marka:
          type: string
          description: Марка груза
          example: EE3421-RU
        container:
          type: object
          description: Данные о контейнере
          properties:
            number:
              type: string
              description: Номер контейнера
              example: JASRZH241602676
            cargoes:
              type: string
              description: Груз в контейнере
              example: >-
                ISOTEC Цилиндр :60х25/ч-1200, 60х28, 80х35,80х38, 80х48, 90х76,
                100х1080, 100х133. Прошивной мат ,Цилиндр -АЛ- 30х89/ч-1200
            isEmpty:
              type: boolean
              description: Признак порожнего контейнера
              example: false
          # required:
          #   - number
        status:
          type: string
          description: Статус грузового места
          enum:
            - Погружен
            - На складе
            - Запланирован
        docNumber:
          type: string
          description: Номер приемного акта порта
          example: '0000041334'
      required:
        - name
        - nomenklatura
        - cargoType
        - weight
        - length
        - width
        - height
        - quantity     
    VesselCall:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор судозахода
          readOnly: true
          example: 6bb94c03-ecc2-11ee-bbac-904d466aa48a
        vesselName:
          type: string
          description: Название судна
          example: MSC Zoe
        imoNumber:
          type: string
          description: IMO номер судна
          example: '9703316'
        callSign:
          type: string
          description: Позывной судна
          example: D5QF7
        arrivalDate:
          type: string
          format: date-time
          description: Дата и время прибытия судна
          example: 10-01-2024
          pattern: ^\d{2}-\d{2}-\d{4}$
        departureDate:
          type: string
          format: date-time
          description: Дата и время отправления судна
          example: 10-01-2024
          pattern: ^\d{2}-\d{2}-\d{4}$
        terminal:
          type: string
          description: Терминал, на который прибыло судно
          enum:
            - Экономия
            - Бакарица
          example: Экономия          
        berth:
          type: string
          description: Номер причала
          example: 5A
        agent:
          type: string
          description: Агент судна
          example: ООО Морской Агент
        status:
          type: string
          description: Статус судозахода
          enum:
            - Планируется
            - Прибыл
            - Отменен
            - Убыл
          example: Прибыл
      required:
        - guid
        - vesselName
    Service:
      type: object
      properties:
        name:
          type: string
          description: Наименование услуги
          example: Услуги погрузки-разгрузки
        cost:
          type: number
          description: Стоимость услуги
          example: 500
      required:
        - name
        - cost
    RequestName:
      type: string
      description: Тип заявки
      enum:
        - Погрузка/выгрузка судна
        - Погрузка/выгрузка автомобиля
        - Погрузка/выгрузка ЖД
        - Складская операция
      example: Заявка на операцию
    PassRequestCommon:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор заявки
          readOnly: true
          example: 0000789453def1dbc-b554-11ea-a9b0-ac1f6b48c241
        documentId:
          type: string
          description: Номер документа
          readOnly: true
          example: '000078945'             
        client:
          type: string
          description: Клиент порта
          example: ООО Транс логистика
        contract:
          type: string
          description: Договор с клиентом порта
          example: Договор перевалки №455-24
        location:
          type: string
          description: Место оказания услуги
          example: Экономия
        manager:
          type: string
          description: Ответственный за подготовку документа
          example: Иванов Иван Иванович
        signer:
          type: string
          description: Подписант заявки со стороны клиента
          example: Сидоров Дмитрий Иванович
        status:
          type: string
          description: Статус заявки
          readOnly: true
          enum:
            - Создана
            - В обработке
            - Одобрена
            - Отклонена
          example: В обработке
        comment:
          type: string
          description: Комментарий к заявке
          example: Добавьте сканы документов
        createdDate:
          type: string
          format: date-time
          example: 07-02-2024T06:32:49Z
          pattern: ^\d{2}-\d{2}-\d{4}T\d{2}:\d{2}:\d{2}Z$
          readOnly: true
          description: Дата и время создания заявки
      required:
        - client
        - contract
        - location
        - manager
        - signer
        - status

    Port:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный код порта
          example: "4a5b3d-6e77-4599-ae6f-dbdd5b36c1b7"
        name:
          type: string
          description: Наименование порта
          example: Калининград
        parent:
          type: string
          description: Родительский объект (например, Бассейн)
          example: Балтийский бассейн
        unLocode:
          type: string
          description: Код UN/LOCODE
          example: RU KG
        country:
          type: string
          description: Страна
          example: Россия
        location:
          type: string
          description: Местоположение
          example: Калининградская область
        coordinates:
          type: string
          description: Координаты
          example: "54.710426, 20.509207"
      required:
        - guid
        - name

    CargoRequestCommon:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор заявки
          readOnly: true
          example: 0000789453def1dbc-b554-11ea-a9b0-ac1f6b48c241
        documentID:
          type: string
          description: Номер документа
          readOnly: true
          example: '000078945'     
        createdDate:
          type: string
          format: date-time
          example: 07-02-2024T06:32:49Z
          pattern: ^\d{2}-\d{2}-\d{4}T\d{2}:\d{2}:\d{2}Z$
          readOnly: true
          description: Дата и время создания заявки          
        requestName:
          type: string
          readOnly: true
          description: Наименование типа заявки
          example: Погрузка/выгрузка автомобиля
        operationType:
          type: string
          readOnly: true          
          description: Вид операции по заявке
          example: Погрузка  
        client:
          type: string
          description: Клиент порта
          example: ООО Транс логистика
        contract:
          type: string
          description: Договор с клиентом порта
          example: Договор перевалки №455-24
        location:
          type: string
          description: Место оказания услуги
          example: Экономия
        manager:
          type: string
          description: Ответственный за подготовку документа
          example: Иванов Иван Иванович
        signer:
          type: string
          description: Подписант заявки со стороны клиента
          example: Сидоров Дмитрий Иванович
        status:
          type: string
          description: Статус заявки
          readOnly: true
          enum:
            - Создана
            - В обработке
            - Одобрена
            - Отклонена
          example: В обработке
        comment:
          type: string
          description: Комментарий к заявке
          example: Добавьте сканы документов
      required:
        - guid
        - documentID
        - createdDate        
        - requestName
        - operationType
        - client
        - contract
        - location
        - manager
        - signer
        - status

    CargoRequestShipCommon:
      type: object
      allOf:
        - $ref: '#/components/schemas/CargoRequestCommon'
      properties:
        typeOfTransport:
          type: string
          # readOnly: false
          enum:
            - Прямое
            - ПСЖВС
          description: Вид сообщения
          example: Прямое
        direction:
          type: string
          # readOnly: false
          enum:
            - Импорт
            - Каботаж
            - Экспорт
          description: Направление
          example: Каботаж
        requestName:
          type: string
          readOnly: false
          description: Наименование типа заявки
          example: Погрузка/выгрузка судна
        operationType:
          type: string
          readOnly: true
          description: Вид операции по заявке
          example: Погрузка или Разгрузка
        departurePort:
          type: string
          description: Порт отправления
          example: Архангельск
        destinationPort:
          type: string
          description: Порт назначения
          example: Дудинка
        customsClearance:
          type: boolean
          description: Таможенное оформление    
          example: false
        vesselCall:
          type: array
          readOnly: false
          description: GUID судозахода
          items:
            type: string
            format: uuid
          example: 
            - c5851ca8-faeb-11ee-bbac-904d466aa48a       
            - 9f246293-eefc-11ee-bbac-904d466aa48a
      required:
        - vesselCall
        - typeOfTransport
        - direction
    CargoRequestShipLoad:
      allOf:
        - $ref: '#/components/schemas/CargoRequestShipCommon'
      properties:
        operationType:
          type: string
          readOnly: false
          description: Вид операции по заявке
          example: Погрузка     
        cargoList:
          type: array
          description: Табличная часть со списком грузов к погрузке в заявке
          items:
            type: object
            properties:
              guid:
                type: string
                format: uuid
              destinationPort:
                type: string
                description: Порт назначения
                example: Владивосток
              urgent:
                type: boolean
                description: Срочный груз или нет
                example: true   
              quantity:
                type: number
                description: Количество грузовых мест
                example: 1
              sender:
                type: string
                format: uuid
                description: Грузоотправитель
                example: 0fd50d38-c53d-11ec-8112-d89d6732c837
              recipient:
                type: string
                description: Грузополучатель
                format: uuid
                example: c05a8361-c53c-11ec-8112-d89d6732c837
              portReceiver:
                type: string
                format: uuid
                description: Грузополучатель в порту назначения
                example: c05a8361-c53c-11ec-8112-d89d6732c837  
            required:
              - guid    
              - recipient
              - quantity
      required:
        - cargoList
    CargoRequestShipUnload:
      allOf:
        - $ref: '#/components/schemas/CargoRequestShipCommon'
      properties:
        operationType:
          type: string
          readOnly: false
          description: Вид операции по заявке
          example: Разгрузка         
        cargoList:
          type: array
          description: Табличная часть со списком грузов к разгрузке в заявке
          items:
            $ref: '#/components/schemas/Cargo'




      required:
        - cargoList
    
    CargoRequestAutoCommon:
      type: object
      allOf:
        - $ref: '#/components/schemas/CargoRequestCommon'
      properties:
        requestName:
          type: string
          readOnly: false
          description: Наименование типа заявки
          example: Погрузка/выгрузка автомобиля
        operationType:
          type: string
          readOnly: false
          description: Вид операции по заявке
          example: Погрузка
        autoPass:
          type: array
          description: Массив GUID согласованных пропусков
          items:
            type: string
      required:
        - autoPass
    CargoRequestAutoLoad:
      allOf:
        - $ref: '#/components/schemas/CargoRequestAutoCommon'
      properties:
        cargoList:
          type: array
          description: Табличная часть со списком грузов к погрузке в заявке
          items:
            type: string
            format: uuid
      required:
        - cargoList
    CargoRequestAutoUnload:
      allOf:
        - $ref: '#/components/schemas/CargoRequestAutoCommon'
      properties:
        cargoList:
          type: array
          description: Табличная часть со списком грузов к разгрузке в заявке
          items:
            $ref: '#/components/schemas/Cargo'
      required:
        - cargoList

    CargoRequestRailCommon:
      type: object
      allOf:
        - $ref: '#/components/schemas/CargoRequestCommon'
      properties:
        requestName:
          type: string
          readOnly: false
          description: Наименование типа заявки
          example: Погрузка/выгрузка ЖД
        operationType:
          type: string
          readOnly: false
          description: Вид операции по заявке
          example: Погрузка или Разгрузка
        departureStation:
          type: string
          description: Станция отправления
          example: СОЛОМБАЛКА
        wagons:
          type: integer
          description: Количество вагонов
          example: 2
      required:
        - departureStation
        - wagons
    CargoRequestRailLoad:
      allOf:
        - $ref: '#/components/schemas/CargoRequestRailCommon'
      properties:
        cargoList:
          type: array
          description: Табличная часть со списком грузов к погрузке в заявке
          items:
            type: string
            format: uuid
      required:
        - cargoList
    CargoRequestRailUnload:
      allOf:
        - $ref: '#/components/schemas/CargoRequestRailCommon'
      properties:
        cargoList:
          type: array
          description: Табличная часть со списком грузов к разгрузке в заявке
          items:
            $ref: '#/components/schemas/Cargo'
      required:
        - cargoList

    PassRequest:
      allOf:
        - $ref: '#/components/schemas/PassRequestCommon'
        - type: object
          properties:
            createdDate:
              type: string
              format: date-time
              description: Дата и время создания заявки
              example: 01-11-2023 12:00:00
              pattern: ^\d{2}-\d{2}-\d{4} \d{2}:\d{2}:\d{2}$
            documentId:
              type: string
              description: Номер документа
              example: '000012345'
              readOnly: true
            accessPeriod:
              type: object
              properties:
                startDate:
                  type: string
                  format: date
                  description: Дата начала аккредитации
                  example: 10-01-2024
                  pattern: ^\d{2}-\d{2}-\d{4}$
                endDate:
                  type: string
                  format: date
                  description: Дата окончания аккредитации
                  example: 10-01-2024
                  pattern: ^\d{2}-\d{2}-\d{4}$
              required:
                - startDate
                - endDate
            requestName:
              type: string
              enum:
                - Пешеходный пропуск
                - Автомобильный пропуск
              description: Тип заявки на пропуск
            requestStatus:
              type: string
              description: Статус заявки
              enum:
                - Черновик
                - Создана
                - В обработке
                - Одобрена
                - Отклонена
              example: В обработке
          required:
            - requestName
            - createdDate
            - status
            - requestStatus
            - accessPeriod
    DriverPass:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор пропуска
          readOnly: true
        status:
          type: string
          description: Статус пропуска
          enum:
            - Черновик
            - Полготовлен
            - Действителен
            - Приостановлен
            - Просрочен
            - Изъят
            - Отклонен
          example: В обработке
        passType:
          type: string
          description: Тип пропуска
          enum:
            - Автомобильный
            - Пешеходный
        accessPeriod:
          type: object
          properties:
            startDate:
              type: string
              format: date
              description: Дата начала аккредитации
              example: 10-01-2024
              pattern: ^\d{2}-\d{2}-\d{4}$
            endDate:
              type: string
              format: date
              description: Дата окончания аккредитации
              example: 10-01-2024
              pattern: ^\d{2}-\d{2}-\d{4}$
          required:
            - startDate
            - endDate
        location:
          type: string
          description: Терминал, на который разрешен проезд
          enum:
            - Экономия
            - Бакарица
          example: Экономия
        driver:
          type: object
          properties:
            persona:
              $ref: '#/components/schemas/Person'
            auto:
              $ref: '#/components/schemas/Auto'
          required:
            - persona
            - auto
      required:
        - accessPeriod
        - location
        - driver
    PersonaPass:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор пропуска
          readOnly: true
        status:
          type: string
          description: Статус пропуска
          enum:
            - Черновик
            - Полготовлен
            - Действителен
            - Приостановлен
            - Просрочен
            - Изъят
            - Отклонен
        passType:
          type: string
          description: Тип пропуска
          enum:
            - Пешеходный
            - Автомобильный
        accessPeriod:
          type: object
          properties:
            startDate:
              type: string
              format: date
              description: Дата начала аккредитации
              example: 10-01-2024
              pattern: ^\d{2}-\d{2}-\d{4}$
            endDate:
              type: string
              format: date
              description: Дата окончания аккредитации
              example: 10-01-2024
              pattern: ^\d{2}-\d{2}-\d{4}$
          required:
            - startDate
            - endDate
        location:
          type: string
          description: Терминал, на который разрешен проезд
          enum:
            - Экономия
            - Бакарица
          example: Экономия
        persona:
          $ref: '#/components/schemas/Person'
      required:
        - accessPeriod
        - location
        - persona
    CargoRequestAuto:
      type: object
      allOf:
          - $ref: '#/components/schemas/CargoRequestCommon'
      properties:        
        requestName:
          type: string
          readOnly: false
          description: Наименование типа заявки
          example: Погрузка/выгрузка автомобиля
        operationType:
          type: string
          readOnly: false         
          description: Вид операции по заявке
          example: Погрузка      
        period:
          type: object
          description: Дата автовизита
          properties:
            startDate:
              type: string
              format: date
              description: Дата прибытия
              example: 10-01-2024
              pattern: ^\d{2}-\d{2}-\d{4}$
            endDate:
              type: string
              format: date
              description: Дата убытия
              example: 10-01-2024
              pattern: ^\d{2}-\d{2}-\d{4}$
          required:
            - startDate
            - endDate
        drivertList:
          type: array
          description: Табличная часть со списком водителей
          items:
            $ref: '#/components/schemas/DriverPass'
        cargoList:
          oneOf:
            - type: array
              description: Табличная часть со списком грузов к погрузке в заявке
              items:
                $ref: '#/components/schemas/Cargo'
            - type: array
              description: >-
                Табличная часть со списком грузов к разгрузке в заявке
                (строковые значения)
              items:
                type: string
      required:
        - guid
        - RequestName
        - operation
        - period
        - drivertList
        - cargoList
    CargoRequestShip:
      type: object
      allOf:
          - $ref: '#/components/schemas/CargoRequestCommon'      
      properties:     
        requestName:
          type: string
          readOnly: false
          description: Наименование типа заявки
          example: Погрузка/выгрузка судна
        operationType:
          type: string
          readOnly: false        
          description: Вид операции по заявке
          example: Погрузка            
        vesselCall:
          $ref: '#/components/schemas/VesselCall'
        cargoList:
          type: array
          description: Табличная часть со списком грузов к погрузке в заявке
          items:
            $ref: '#/components/schemas/Cargo'
      required:
        - guid
        - RequestName
        - operation
        - cargoList
    CargoRequestRail:
      type: object
      allOf:
          - $ref: '#/components/schemas/CargoRequestCommon'      
      properties:    
        requestName:
          type: string
          readOnly: false
          description: Наименование типа заявки
          example: Погрузка/выгрузка ЖД
        operationType:
          type: string
          readOnly: false         
          description: Вид операции по заявке
          example: Погрузка            
        departureStation:
          type: string
          description: Станция отправления
          example: СОЛОМБАЛКА
        wagons:
          type: integer
          description: Количество вагонов
          example: 2
        cargoList:
          type: array
          description: Табличная часть со списком грузов к погрузке в заявке
          items:
            $ref: '#/components/schemas/Cargo'
      required:
        - guid
        - RequestName
        - operation
        - cargoList
    Document:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор документа
          readOnly: true
        personGuid:
          type: string
          description: Уникальный идентификатор физического лица
        documentType:
          type: string
          description: Тип документа
          enum:
            - Паспорт
            - Водительское удостоверение
            - Иностранный паспорт
          example: Паспорт
        documentFiles:
          type: array
          items:
            type: string
            format: binary
          description: Массив сканов документа
      required:
        - personGuid
        - documentType
        - documentFiles
    ClientProfile:
      type: object
      properties:
        guid:
          type: string
          format: uuid
          readOnly: true
          description: Уникальный идентификатор организации
        basicInfo:
          type: object
          properties:
            name:
              type: string
              description: Наименование
              example: АТФ ПАО ГМК Норильский
            inn:
              type: string
              description: ИНН
              example: '8401005730'
            kpp:
              type: string
              description: КПП
              example: '290102001'
        contactInfo:
          type: object
          properties:
            email:
              type: string
              format: email
              description: Email
              example: example@example.com
            legalAddress:
              type: string
              description: Адрес юридический
              example: 123456, г. Москва, ул. Примерная, д. 5
            phone:
              type: string
              description: Контактный телефон
              example: +7 123 456 7890
            actualAddress:
              type: string
              description: Адрес фактический
              example: 654321, г. Санкт-Петербург, ул. Примерная, д. 10
        contracts:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Contract'
        responsiblePersons:
          type: array
          items:
            type: object
            properties:
              roleType:
                type: string
                enum:
                  - Главный бухгалтер
                  - Начальник участка
                  - Подписант
                  - Представитель
                  - Руководитель
                description: Тип ответственного лица
                example: Главный бухгалтер
              person:
                $ref: '#/components/schemas/Person'
    Contractor:
      type: object
      properties:
        guid:
          type: string
          format: uuid
          readOnly: true
          description: Уникальный идентификатор контрагента
        basicInfo:
          type: object
          properties:
            name:
              type: string
              description: Наименование контрагента
              example: ООО Контрагент
            inn:
              type: string
              description: ИНН контрагента
              example: '7723456789'
            kpp:
              type: string
              description: КПП контрагента
              example: '770101001'
            okpo:
              type: string
              description: ОКПО контрагента
              example: '101001'
          required:
            - name
        contactInfo:
          type: object
          properties:
            email:
              type: string
              format: email
              description: Электронная почта
              example: contact@example.com
            legalAddress:
              type: string
              description: Юридический адрес
              example: г. Москва, ул. Примерная, д. 1
            phone:
              type: string
              description: Телефон
              example: +7 495 123 4567
            actualAddress:
              type: string
              description: Фактический адрес
              example: г. Санкт-Петербург, ул. Пушкина, д. 10
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/Contract'
        responsiblePersons:
          type: array
          items:
            type: object
            properties:
              roleType:
                type: string
                enum:
                  - Главный бухгалтер
                  - Начальник участка
                  - Подписант
                  - Представитель
                  - Руководитель
                description: Тип ответственного лица
                example: Главный бухгалтер
              person:
                type: string
                description: ФИО ответственного лица
                example: Иванов Иван Иванович
      required:
        - basicInfo
    Contract:
      type: object
      properties:
        contractId:
          type: string
        name:
          type: string
        startDate:
          type: string
          format: date
          example: 10-01-2024
          pattern: ^\d{2}-\d{2}-\d{4}$
        endDate:
          type: string
          format: date
          example: 10-01-2024
          pattern: ^\d{2}-\d{2}-\d{4}$
        status:
          type: string
    Warehouse:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор склада
          readOnly: true
        name:
          type: string
          description: Название склада
        zones:
          type: array
          description: Список складских зон
          items:
            $ref: '#/components/schemas/WarehouseZone'
      required:
        - guid
        - name
        - zones
    WarehouseZone:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор складской зоны
          readOnly: true
        name:
          type: string
          description: Название складской зоны
        description:
          type: string
          description: Описание складской зоны
        coordinates:
          type: array
          description: Координаты складской зоны
          items:
            type: object
            properties:
              x:
                type: integer
                description: Координата X
              'y':
                type: integer
                description: Координата Y
      required:
        - guid
        - name
        - coordinates
    Terminal:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор терминала
          readOnly: true
        name:
          type: string
          description: Название терминала
        description:
          type: string
          description: Описание терминала
      required:
        - guid
        - name
    ReceivingCommon:
      type: object
      properties:
        guid:
          type: string
          description: GUID Приемного акта
          example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
          readOnly: true
        documentID:
          type: string
          example: '000014294'
          description: Номер документа
        createdDate:
          type: string
          format: date-time
          example: 07-02-2024T06:32:49Z
          pattern: ^\d{2}-\d{2}-\d{4}T\d{2}:\d{2}:\d{2}Z$
          description: Дата и время создания
        operationType:
          type: string
          description: Тип операции
          example: Затарка
        terminal:
          type: string
          description: Название терминала порта
          example: Экономия
        warehouse:
          type: string
          example: СК1
          description: Складской комплекс
        client:
          type: string
          example: ООО ЛОГИСТИК-ЦЕНТР
          description: Клиент
        shipper:
          type: string
          example: Баренц Контейнер Менеджмент ООО
          description: Грузоотправитель
        addressee:
          type: string
          example: ООО АМТП для АО ЛОГИСТИК-ЦЕНТР
          description: Грузополучатель
        addresseeAtPort:
          type: string
          example: ООО ЛОГИСТИК-ЦЕНТР
          description: Грузополучатель в порту назначения
        responsibleForData:
          type: string
          description: Ответственный за внесение данных
          example: Сидоров Дмитрий Иванович
        responsibleForCargo:
          type: string
          description: Ответственный за приёмку груза на складе
          example: Козенкова Наталья Петровна
      required:
        - guid
        - documentID
        - createdDate
        - operationType
        - terminal
        - warehouse
    ReceivingDocument:
      type: object
      properties:
        receivingCommon:
          $ref: '#/components/schemas/ReceivingCommon'
        cargoList:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Cargo'
              - type: object
                properties:
                  warehouseZone:
                    type: string
                    description: Наименование складской зоны
                    example: Зона A
          description: Массив грузов
      required:
        - guid
        - documentNumber
        - createdDate
        - documentType
        - operationType
        - warehouse
        - client
        - team
        - cargoList
    Attachment:
      type: object
      properties:
        fileName:
          type: string
          example: file_02022024
        fileType:
          type: string
          example: pdf
        fileDate:
          type: string
          format: date
          example: 10-01-2024
          pattern: ^\d{2}-\d{2}-\d{4}$
        fileContent:
          type: string
          format: binary
      required:
        - fileName
        - fileType
        - fileDate
        - fileContent
    BillOfLading:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор документа
        documentType:
          type: string
          example: Коносамент
        documentNumber:
          type: string
          description: Номер коносамента
        shipmentDate:
          type: string
          format: date-time
          description: Дата отправки
    Invoice:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор документа
        documentType:
          type: string
          example: Счет
        invoiceNumber:
          type: string
          description: Номер счета
        billingDate:
          type: string
          format: date-time
          description: Дата выставления счета
        totalAmount:
          type: number
          format: float
          description: Общая сумма счета

paths:
  /auth/login:
    post:
      tags:
        - Авторизация
      summary: Авторизация пользователя
      description: >
        Эндпоинт позволяет пользователю авторизоваться в системе, используя
        логин и пароль, для получения JWT токена.
      security:
        - BasicAuth: []
        - bearerAuth: []
      responses:
        '200':
          description: Аутентификация прошла успешно. Возвращает JWT токен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT токен для доступа к API.
                  token_type:
                    type: string
                    default: Bearer
                    description: Тип токена.
                  expires_in:
                    type: integer
                    description: Время действия токена в секундах.
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/logout:
    post:
      tags:
        - Авторизация
      summary: Выход из системы
      description: Позволяет пользователю завершить сессию и выйти из системы.
      security:
        - bearerAuth: []
        - sessionAuth: []
      responses:
        '200':
          description: Успешный выход из системы
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном выходе из системы
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/create:
    post:
      tags:
        - Управление пользователями
      summary: Создание нового пользователя
      description: Позволяет администратору создать нового пользователя в системе.
      security:
        - bearerAuth: []
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  description: Полное имя пользователя
                position:
                  type: string
                  description: Должность пользователя в организации
                email:
                  type: string
                  format: email
                  description: Электронная почта пользователя
                role:
                  type: string
                  description: Роль пользователя в системе
                  enum:
                    - admin
                    - user
                    - manager
                    - guest
              required:
                - fullname
                - position
                - email
                - role
      responses:
        '201':
          description: Новый пользователь успешно создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: Уникальный идентификатор созданного пользователя
                  message:
                    type: string
                    description: Сообщение о успешном создании пользователя
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/list:
    get:
      tags:
        - Управление пользователями
      summary: Получение списка пользователей организации
      description: >-
        Позволяет получить список всех пользователей, принадлежащих указанной
        организации.
      security:
        - bearerAuth: []
        - sessionAuth: []
      responses:
        '200':
          description: Список пользователей организации успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                      description: Уникальный идентификатор пользователя
                    username:
                      type: string
                      description: Имя пользователя для входа в систему
                    email:
                      type: string
                      format: email
                      description: Электронная почта пользователя
                    fullname:
                      type: string
                      description: Полное имя пользователя
                    position:
                      type: string
                      description: Должность пользователя в организации
                    role:
                      type: string
                      description: Роль пользователя в системе
                      enum:
                        - admin
                        - user
                        - manager
                        - guest
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/{guid}:
    delete:
      tags:
        - Управление пользователями
      summary: Удаление пользователя
      description: Позволяет администратору удалить пользователя из системы.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
          description: Уникальный идентификатор пользователя для удаления
      responses:
        '200':
          description: Пользователь успешно удален
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном удалении пользователя
        '401':
          description: >-
            Неверный запрос, отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Доступ запрещен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Управление пользователями
      summary: Получение данных пользователя
      description: >-
        Позволяет получить данные пользователя по его уникальному
        идентификатору.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
          description: Уникальный идентификатор пользователя для получения данных
      responses:
        '200':
          description: Данные пользователя успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор пользователя
                  fullname:
                    type: string
                    description: Полное имя пользователя
                  username:
                    type: string
                    description: Имя пользователя для входа в систему
                  email:
                    type: string
                    format: email
                    description: Электронная почта пользователя
                  position:
                    type: string
                    description: Должность пользователя в организации
                  lastLogin:
                    type: string
                    format: date-time
                    description: Дата и время
                  role:
                    type: string
                    description: Роль пользователя в системе
                    enum:
                      - admin
                      - user
                      - manager
                      - guest
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Управление пользователями
      summary: Обновление данных пользователя
      description: Позволяет пользователю обновить свои личные данные.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
          description: Уникальный идентификатор пользователя для обновления данных
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  description: Новое полное имя пользователя
                email:
                  type: string
                  format: email
                  description: Новая электронная почта пользователя
                position:
                  type: string
                  description: Должность пользователя в организации
                newPassword:
                  type: string
                  description: Новый пароль пользователя
      responses:
        '200':
          description: Данные пользователя успешно обновлены
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном обновлении данных пользователя
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/ship:
    get:
      tags:
        - Дашборд
      summary: Формирование дашборда по отгрузке судна с грузами клиента
      description: |
        Эндпоинт для формирования дашборда по отгрузке судна с грузами клиента.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: true
          schema:
            type: string
            format: date
            example: 10-01-2024
            pattern: ^\d{2}-\d{2}-\d{4}$
        - name: endDate
          in: query
          description: Дата окончания периода
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по отгрузке и погрузке успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      example: 10-01-2024
                      pattern: ^\d{2}-\d{2}-\d{4}$
                      description: Дата
                    terminals:
                      type: array
                      description: Список терминалов порта с данными о погрузке и выгрузке
                      items:
                        type: object
                        properties:
                          terminal:
                            type: string
                            description: Терминал порта (например, Экономия, Бакарица)
                          load_weight:
                            type: number
                            format: float
                            description: Общий вес погруженных грузов
                          load_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы погрузки
                          unload_weight:
                            type: number
                            format: float
                            description: Общий вес выгруженных грузов
                          unload_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы выгрузки
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/rail:
    get:
      tags:
        - Дашборд
      summary: >-
        Формирование дашборда по отгрузке и погрузке ЖД вагонов с грузами
        клиента
      description: >
        Эндпоинт для формирования дашборда по отгрузке и погрузке ЖД вагонов с
        грузами клиента в разрезе терминалов порта.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по отгрузке и погрузке успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      example: 10-01-2024
                      pattern: ^\d{2}-\d{2}-\d{4}$
                      description: Дата
                    terminals:
                      type: array
                      description: Список терминалов порта с данными о погрузке и выгрузке
                      items:
                        type: object
                        properties:
                          terminal:
                            type: string
                            description: Терминал порта (например, Экономия, Бакарица)
                          load_weight:
                            type: number
                            format: float
                            description: Общий вес погруженных грузов
                          load_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы погрузки
                          unload_weight:
                            type: number
                            format: float
                            description: Общий вес выгруженных грузов
                          unload_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы выгрузки
                          processed_wagons:
                            type: integer
                            description: Количество обработанных вагонов
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/auto:
    get:
      tags:
        - Дашборд
      summary: >-
        Формирование дашборда по отгрузке и погрузке автомобилей с грузами
        клиента
      description: >
        Эндпоинт для формирования дашборда по отгрузке и погрузке автомобилей с
        грузами клиента в разрезе терминалов порта.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по отгрузке и погрузке успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      example: 10-01-2024
                      pattern: ^\d{2}-\d{2}-\d{4}$
                      description: Дата
                    terminals:
                      type: array
                      description: Список терминалов порта с данными о погрузке и выгрузке
                      items:
                        type: object
                        properties:
                          terminal:
                            type: string
                            description: Терминал порта (например, Экономия, Бакарица)
                          load_weight:
                            type: number
                            format: float
                            description: Общий вес погруженных грузов
                          load_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы погрузки
                          unload_weight:
                            type: number
                            format: float
                            description: Общий вес выгруженных грузов
                          unload_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы выгрузки
                          processed_auto:
                            type: integer
                            description: Количество обработанных автомобилей
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/warehouse:
    get:
      tags:
        - Дашборд
      summary: >-
        Отображение количества груза клиента на складских комплексах терминалов
        порта
      description: >
        Эндпоинт для отображения количества (вес в тоннах и фрахтовых единицах)
        груза клиента на складских комплексах терминалов порта на определенную
        дату в виде гистограммы.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: date
          in: query
          description: Дата для отображения данных
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по грузам на складских комплексах успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    terminal:
                      type: string
                      description: Терминал порта (например, Экономия, Бакарица)
                    warehouse:
                      type: array
                      description: Складской комплекс
                      items:
                        type: object
                        properties:
                          warehouse_zone:
                            type: string
                            description: Складская зона
                          cargo_weight:
                            type: number
                            format: float
                            description: Вес груза в тоннах
                          cargo_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы груза
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/container:
    get:
      tags:
        - Дашборд
      summary: Данные о количестве затаренных и растаренных контейнеров клиента
      description: >
        Эндпоинт для предоставления данных для дашборда о количестве затаренных
        и растаренных контейнеров клиента за период в разрезе терминалов и
        складских зон порта.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по контейнерным операциям успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    terminal:
                      type: string
                      description: Терминал порта (например, Экономия, Бакарица)
                    warehouse:
                      type: array
                      description: >-
                        Список складских зон терминала с данными о контейнерных
                        операциях
                      items:
                        type: object
                        properties:
                          warehouse_zone:
                            type: string
                            description: Складская зона
                          stuffed_containers:
                            type: integer
                            description: Количество затаренных контейнеров
                          stripped_containers:
                            type: integer
                            description: Количество растаренных контейнеров
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /vesselcalls:
    get:
      tags:
        - Судозаходы
      summary: Получить судозаходы за период
      description: >-
        Возвращает список судозаходов за указанный период с возможностью
        фильтрации по судам и пагинацией.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: page
          in: query
          required: true
          description: Номер страницы для пагинации
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          required: true
          description: Количество судозаходов на странице
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список судозаходов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество судозаходов
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество судозаходов на странице
                  vesselCalls:
                    type: array
                    items:
                      $ref: '#/components/schemas/VesselCall'
                required:
                  - total
                  - page
                  - pageSize
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /vesselcalls/{guid}:
    get:
      tags:
        - Судозаходы
      summary: Получить данные по судозаходу
      description: Возвращает данные по указанному идентификатору судозахода  `guid`.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: Уникальный идентификатор судозахода
          schema:
            type: string
            example: 6bb94c03-ecc2-11ee-bbac-904d466aa48a
      responses:
        '200':
          description: Данные по судозаходу успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VesselCall'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Судозаход не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /documents:
    get:
      tags:
        - Журнал документов
      summary: Получить список документов клиента
      description: >-
        Возвращает список документов клиента из журнала БД с поддержкой
        пагинации.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: true
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество документов на странице
          required: true
          schema:
            type: integer
            default: 10
        - name: sortBy
          in: query
          description: Поле для сортировки (createdDate, documentId)
          required: false
          schema:
            type: string
            enum:
              - createdDate
              - documentId
        - name: sortOrder
          in: query
          description: Порядок сортировки (asc для возрастания, desc для убывания)
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: documentType
          in: query
          description: Фильтр по типу документа
          required: false
          schema:
            type: string
            example: Приемный акт
      responses:
        '200':
          description: Список документов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество документов
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество документов на странице
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        guid:
                          type: string
                          description: Уникальный идентификатор документа в БД
                          example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
                        documentId:
                          type: string
                          description: Регистрационный номер документа
                          example: '0000098212'
                        createdDate:
                          type: string
                          format: date-time
                          example: 07-02-2024T06:32:49Z
                          pattern: ^\d{2}-\d{2}-\d{4}T\d{2}:\d{2}:\d{2}Z$
                          description: Дата и время создания заявки
                        documentType:
                          type: string
                          description: Название документа
                          example: Приемный акт
                        operationType:
                          type: string
                          description: Тип операции
                          example: Затарка
                        comment:
                          type: string
                          description: Комментарий к документу
                          example: Стандартный груз
                        attached:
                          type: boolean
                          description: Наличие прикрепленных файлов в документе
                          example: true
                required:
                  - total
                  - page
                  - pageSize
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Документы не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /documents/types:
    get:
      tags:
        - Журнал документов
      summary: Получить список используемых типов документов
      description: Возвращает список используемых типов документов из журнала БД.
      security:
        - bearerAuth: []
        - sessionAuth: []
      responses:
        '200':
          description: Список типов документов успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: Приемный акт
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Типы документов не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /documents/{guid}:
    get:
      summary: Получить данные документа по GUID
      description: >-
        Возвращает данные документа по его уникальному идентификатору (GUID), с
        учетом типа документа.
      security:
        - bearerAuth: []
        - sessionAuth: []      
      tags:
        - Журнал документов
      parameters:
        - name: guid
          in: path
          required: true
          description: Уникальный идентификатор документа
          schema:
            type: string
            example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
      responses:
        '200':
          description: Данные документа успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    example: a583b637-5570-488e-a322-fece4d202ff7
                  documentId:
                    type: string
                    example: "00503788"
                  createdDate:
                    type: string
                    format: date-time
                    example: "2024-08-11T19:12:04"
                  documentType:
                    type: string
                    example: "Приемный акт"
                  operationType:
                    type: string
                    example: "Разгрузка вагона"
                  comment:
                    type: string
                    example: ""
                  attached:
                    type: boolean
                    example: true
                  pdfFileContent:
                    type: string
                    format: binary                  
        '400':
          description: Неверный запрос. Проверить параметры
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неавторизованный доступ. Проверьте токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Документ не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /documents/{guid}/attachments:
    get:
      tags:
        - Журнал документов
      summary: Получить сканы приложенные к документу
      description: Возвращает список сканов, прикрепленных к документу.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: Уникальный идентификатор документа
          schema:
            type: string
            example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
        - name: documentType
          in: query
          description: Тип документа
          # required: true
          schema:
            type: string
            example: Приемный акт
      responses:
        '200':
          description: Документы успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  attachments:
                    type: array
                    description: Список документов
                    items:
                      $ref: '#/components/schemas/Attachment'
                      # type: object
                      # properties:
                      #   fileName:
                      #     type: string
                      #     description: Название файла
                      #     example: document_scan_01.pdf
                      #   fileContent:
                      #     type: string
                      #     format: binary
                      #     description: Содержимое файла
                required:
                  - documents
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Документ не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests/name:
    get:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Получить все типы заявок
      description: Возвращает список всех типов заявок клиента из базы данных.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество типов заявок на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список типов заявок успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество типов заявок
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество типов заявок на странице
                  RequestNames:
                    type: array
                    items:
                      $ref: '#/components/schemas/RequestName'
                required:
                  - total
                  - page
                  - pageSize
                  - RequestNames
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Типы заявок не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests:
    get:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Получить список заявок
      description: >-
        Возвращает список заявок на погрузку или разгрузку грузов с возможностью
        фильтрации по периоду и типу.
      security:
        - bearerAuth: []
        - sessionAuth: []      
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: false
          schema:
            type: string
            format: date
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: true
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество заявок на странице
          required: true
          schema:
            type: integer
            default: 10
        - name: sortBy
          in: query
          description: Поле для сортировки (createdDate, documentID)
          required: false
          schema: 
            type: string
            enum:
              - createdDate
              - documentID
        - name: sortOrder
          in: query
          description: Порядок сортировки (asc для возрастания, desc для убывания)
          required: false
          schema: 
            type: string
            enum: 
              - asc
              - desc
        - name: requestName
          in: query
          description: Тип заявки
          required: false
          schema:
            type: string
            enum:
              - Погрузка/выгрузка автомобиля
              - Погрузка/выгрузка судна
              - Погрузка/выгрузка ЖД
        - name: operationType
          in: query
          description: Вид операции по заявке
          required: false
          schema:
            type: string
            enum:
              - Погрузка
              - Разгрузка
      responses:
        '200':
          description: Список заявок успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество заявок
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество заявок на странице
                  requests:
                    type: array
                    items:
                      $ref: '#/components/schemas/CargoRequestCommon'
                required:
                  - total
                  - page
                  - pageSize
                  - requests
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявки не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Создать новую заявку на погрузку/разгрузку
      description: >-
        Создает новую заявку на погрузку или разгрузку грузов автомобиля или
        судна.
      security:
        - bearerAuth: []
        - sessionAuth: []           
      requestBody:
        description: Данные для создания новой заявки
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CargoRequestAuto'
                - $ref: '#/components/schemas/CargoRequestShip'
                - $ref: '#/components/schemas/CargoRequestRail' 
            examples:
              CargoRequestShipLoadExample:
                summary: Пример заявки на погрузку судна
                value:
                  requestName: Погрузка судна
                  operationType: Погрузка
                  client: ООО Морской Агент
                  contract: Договор №123
                  location: Экономия
                  manager: Иванов И.И.
                  signer: Петров П.П.
                  status: Создана
                  comment: Срочная отправка
                  vesselCall: 0000789453def1db-b554-11ea-a9b0-ac1f6b48c241
                  cargoList:
                    - 72b61a39-c9a4-4fda-8724-51db2cfb0a6f
                    - 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c242
                    - 4a5b7c3d-6e77-4599-ae6f-dbdd5b36c1b7
              CargoRequestShipUnloadExample:
                summary: Пример заявки на разгрузку судна
                value:
                  requestName: Разгрузка судна
                  operationType: Разгрузка
                  client: ООО Морской Агент
                  contract: Договор №124
                  location: Экономия
                  manager: Иванов И.И.
                  signer: Петров П.П.
                  status: Создана
                  comment: Обычная разгрузка
                  vesselCall: 0000789453def1db-b554-11ea-a9b0-ac1f6b48c241
                  cargoList:
                    - name: Контейнер CAXU6600984
                      nomenklatura: Контейнер CAXU
                      weight: 38000
                      volume: 67.7
                      length: 13.716
                      width: 2.438
                      height: 2.896
                      quantity: 1
                      cargoType: Контейнер
                      packaging: Отсутствует
                      storageConditions: Открытое
                      hazardClass: 1.2
                      marka: EE3421-RU
              CargoRequestAutoLoadExample:
                summary: Пример заявки на погрузку автомобиля
                value:
                  requestName: Погрузка автомобиля
                  operationType: Погрузка
                  client: ООО Авто Логистика
                  contract: Договор №456
                  location: Бакарица
                  manager: Сидоров С.С.
                  signer: Кузнецов К.К.
                  status: Создана
                  comment: Ожидается разрешение
                  autoPass:
                    - 0000789453def1dbc-b554-11ea-a9b0-ac1f6b48c241
                    - 0000789453def1dbc-b554-11ea-a9f6b48c242
                  cargoList:
                    - 72b61a39-c9a4-4fda-8724-51db2cfb0a6f
                    - 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c242
                    - 4a5b7c3d-6e77-4599-ae6f-dbdd5b36c1b7
              CargoRequestAutoUnloadExample:
                summary: Пример заявки на разгрузку автомобиля
                value:
                  requestName: Разгрузка автомобиля
                  operationType: Разгрузка
                  client: ООО Авто Логистика
                  contract: Договор №457
                  location: Бакарица
                  manager: Сидоров С.С.
                  signer: Кузнецов К.К.
                  status: Создана
                  comment: Документы в работе
                  autoPass:
                    - 0000789453def1dbc-b554-11ea-a9b0-ac1f6b48c241
                    - 0000789453def1dbc-b554-11ea-a9f6b48c242
                  cargoList:
                    - name: Контейнер CAXU6600985
                      nomenklatura: Контейнер CAXU
                      weight: 35000
                      volume: 67.7
                      length: 13.716
                      width: 2.438
                      height: 2.896
                      quantity: 1
                      cargoType: Контейнер
                      packaging: Отсутствует
                      storageConditions: Открытое
                      hazardClass: 1.2
                      marka: EE3422-RU
              CargoRequestRailLoadExample:
                summary: Пример заявки на погрузку ЖД
                value:
                  requestName: Погрузка ЖД
                  operationType: Погрузка
                  client: ООО Железнодорожная Логистика
                  contract: Договор №789
                  location: СОЛОМБАЛКА
                  manager: Николаев Н.Н.
                  signer: Дмитриев Д.Д.
                  status: Создана
                  comment: Требуется допуск
                  departureStation: СОЛОМБАЛКА
                  wagons: 2
                  cargoList:
                    - 72b61a39-c9a4-4fda-8724-51db2cfb0a6f
                    - 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c242
                    - 4a5b7c3d-6e77-4599-ae6f-dbdd5b36c1b7
              CargoRequestRailUnloadExample:
                summary: Пример заявки на разгрузку ЖД
                value:
                  requestName: Разгрузка ЖД
                  operationType: Разгрузка
                  client: ООО Железнодорожная Логистика
                  contract: Договор №790
                  location: СОЛОМБАЛКА
                  manager: Николаев Н.Н.
                  signer: Дмитриев Д.Д.
                  status: Создана
                  comment: Обычная разгрузка
                  departureStation: СОЛОМБАЛКА
                  wagons: 2
                  cargoList:
                    - name: Контейнер CAXU6600986
                      nomenklatura: Контейнер CAXU
                      weight: 36000
                      volume: 67.7
                      length: 13.716
                      width: 2.438
                      height: 2.896
                      quantity: 1
                      cargoType: Контейнер
                      packaging: Отсутствует
                      storageConditions: Открытое
                      hazardClass: 1.2
                      marka: EE3423-RU                     
      responses:
        '201':
          description: Заявка успешно создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор созданной заявки
                    example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
                required:
                  - guid
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 400
                message: Invalid request data
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 401
                message: Token has expired
  /requests/{guid}:
    get:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Получить заявку по GUID
      description: Возвращает данные заявки по ее уникальному идентификатору `guid`.
      security:
        - bearerAuth: []
        - sessionAuth: []      
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор заявки
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Данные заявки успешно получены
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CargoRequestAuto'
                  - $ref: '#/components/schemas/CargoRequestShip'
                  - $ref: '#/components/schemas/CargoRequestRail' 
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /requests/ship:
    post:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Создать новую заявку на погрузку/разгрузку
      security:
        - bearerAuth: []
        - sessionAuth: []      
      description: >-
        Создает новую заявку на погрузку или разгрузку грузов автомобиля или
        судна.
      requestBody:
        description: Данные для создания новой заявки
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CargoRequestShipLoad'
                - $ref: '#/components/schemas/CargoRequestShipUnload'
            examples:              
              CargoRequestShipLoadExample:
                summary: Пример заявки на погрузку
                value: 
                  requestName: Погрузка/выгрузка судна
                  operationType: Погрузка
                  client: АТФ ПАО ГМК "Норильский Никель"
                  contract: 01/Э-16/600-15-НН/1096-2015
                  location: Экономия
                  manager: Трунова Эльза Владимировна
                  signer: Сидоров Дмитрий Иванович
                  status: Черновик
                  typeOfTransport: Прямое
                  direction: Каботаж
                  departurePort: 
                  destinationPort:
                  comment: Добавьте сканы документов                 
                  vesselCall: 
                    - 9f246293-eefc-11ee-bbac-904d466aa48a
                  cargoList:
                    - guid: 271edcd7-525d-11ef-bbae-e744ebce2988
                      destinationPort: Владивосток
                      quantity: 1
                      urgent: 
                      sender: 0fd50d38-c53d-11ec-8112-d89d6732c837
                      recipient: c05a8361-c53c-11ec-8112-d89d6732c837
                      portReceiver: 87add32e-c566-11ec-8112-d89d6732c837 
                    - guid: f9f78d83-525d-11ef-bbae-e744ebce2988
                      destinationPort: Калининград
                      quantity: 1
                      urgent: true
                      sender: 
                      recipient: 
                      portReceiver: 
                    - guid: 13d4c601-525e-11ef-bbae-e744ebce2988
                      destinationPort: 
                      quantity: 1
                      urgent: 
                      sender: 
                      recipient: 
                      portReceiver: 
              CargoRequestShipUnloadExample:
                summary: Пример заявки на разгрузку
                value: 
                  requestName: Погрузка/выгрузка судна
                  operationType: Разгрузка
                  client: АТФ ПАО ГМК "Норильский Никель"
                  contract: 01/Э-16/600-15-НН/1096-2015
                  location: Экономия
                  manager: Трунова Эльза Владимировна
                  signer: Сидоров Дмитрий Иванович
                  status: Черновик
                  typeOfTransport: Прямое
                  direction: Каботаж
                  departurePort: 
                  destinationPort:                  
                  comment: Добавьте сканы документов
                  vesselCall: 
                    - 9f246293-eefc-11ee-bbac-904d466aa48a
                  cargoList:
                    - name: Контейнер CAXU6600984
                      nomenklatura: Контейнер CAXU
                      weight: 38000
                      volume: 67.7
                      length: 13.716
                      width: 2.438
                      height: 2.896
                      quantity: 1
                      cargoType: Контейнер
                      packaging: Отсутствует
                      storageConditions: Открытое
                      hazardClass: '1.2'
                      marka: EE3421-RU
                      container:
                        number: JASRZH241602676
                        cargoes: >-
                          ISOTEC Цилиндр :60х25/ч-1200, 60х28, 80х35,80х38, 80х48, 90х76,
                          100х1080, 100х133. Прошивной мат ,Цилиндр -АЛ- 30х89/ч-1200
                        isEmpty: false
                      status: Ожидается
                    - name: Контейнер CAXU62320981
                      nomenklatura: Контейнер AXU
                      weight: 38000
                      volume: 67.7
                      length: 13.716
                      width: 2.438
                      height: 2.896
                      quantity: 1
                      cargoType: Контейнер
                      packaging: Отсутствует
                      storageConditions: Открытое
                      hazardClass: 
                      marka: 
                      container:
                        number: JASRZH241604444
                        cargoes: 
                        isEmpty: true
                      status: Ожидается
                    - name: Крепь анкерная  АСПТ-48х3х2400 1 / 54
                      nomenklatura: Крепь анкерная  АСПТ-48х3х2400
                      weight: 660
                      volume: 0.638
                      length: 2.55
                      width: 0.5
                      height: 0.5
                      quantity: 2
                      cargoType: Генеральный груз
                      packaging: связка
                      storageConditions: Крытое
                      hazardClass: 
                      marka: 
                      container:
                        number: 
                        cargoes: 
                        isEmpty:                       
                      status: Ожидается
                    - name: Насыпной груз ABC
                      nomenklatura: Насыпной ABC
                      weight: 50000
                      volume: 120.0
                      length: 15.0
                      width: 3.0
                      height: 3.0
                      quantity: 1
                      cargoType: Насыпной/Навальный
                      packaging: Отсутствует
                      storageConditions: Открытое
                      hazardClass: '3.2'
                      marka: SRZH241
                      container:
                        number: 
                        cargoes: 
                        isEmpty: 
                      status: Запланирован
      responses:
        '201':
          description: Заявка успешно создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор созданной заявки
                    example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
                required:
                  - guid
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 400
                message: Invalid request data
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 401
                message: Token has expired
  /requests/ship/{guid}:
    put:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Обновить данные заявки на погрузку/разгрузку судна
      security:
        - bearerAuth: []
        - sessionAuth: []
      description: Обновляет данные существующей заявки на погрузку или разгрузку грузов судна.
      parameters:
        - name: guid
          in: path
          required: true
          description: Уникальный идентификатор заявки
          schema:
            type: string
            format: uuid
      requestBody:
        description: Данные для обновления заявки
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CargoRequestShipLoad'
                - $ref: '#/components/schemas/CargoRequestShipUnload'
            examples:
              CargoRequestShipLoadExample:
                summary: Пример обновления заявки на погрузку судна
                value:
                  requestName: Погрузка/выгрузка судна
                  operationType: Погрузка
                  client: ООО Морской Агент
                  contract: Договор №123
                  location: Экономия
                  manager: Иванов И.И.
                  signer: Петров П.П.
                  status: Одобрена
                  comment: Срочная отправка с изменениями
                  vesselCall:
                    - 0000789453def1db-b554-11ea-a9b0-ac1f6b48c241
                  cargoList:
                    - 72b61a39-c9a4-4fda-8724-51db2cfb0a6f
                    - 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c242
                    - 4a5b7c3d-6e77-4599-ae6f-dbdd5b36c1b7
              CargoRequestShipUnloadExample:
                summary: Пример обновления заявки на разгрузку судна
                value:
                  requestName: Погрузка/выгрузка судна
                  operationType: Разгрузка
                  client: ООО Морской Агент
                  contract: Договор №124
                  location: Экономия
                  manager: Иванов И.И.
                  signer: Петров П.П.
                  status: Одобрена
                  comment: Стандартная разгрузка с изменениями
                  vesselCall:
                    - 0000789453def1db-b554-11ea-a9b0-ac1f6b48c242
                  cargoList:
                    - name: Контейнер CAXU6600984
                      nomenklatura: Контейнер CAXU
                      weight: 38000
                      volume: 67.7
                      length: 13.716
                      width: 2.438
                      height: 2.896
                      quantity: 1
                      cargoType: Контейнер
                      packaging: Отсутствует
                      storageConditions: Открытое
                      hazardClass: '1.2'
                      marka: EE3421-RU
      responses:
        '200':
          description: Заявка успешно обновлена
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор обновленной заявки
                    example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
                required:
                  - guid
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 400
                message: Invalid request data
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 401
                message: Token has expired
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 404
                message: Request not found
    delete:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Удалить заявку на погрузку/разгрузку судна
      description: Удаляет существующую заявку на погрузку или разгрузку грузов судна.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: Уникальный идентификатор заявки
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Заявка успешно удалена
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 400
                message: Invalid request data
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 401
                message: Token has expired
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 404
                message: Request not found
  /requests/auto:
    post:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Создать новую заявку на погрузку/разгрузку автомобиля
      description: Создает новую заявку на погрузку или разгрузку грузов автомобиля.
      security:
        - bearerAuth: []
        - sessionAuth: []      
      requestBody:
        description: Данные для создания новой заявки
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CargoRequestAutoLoad'
                - $ref: '#/components/schemas/CargoRequestAutoUnload'
            examples:
              CargoRequestAutoLoadExample:
                summary: Пример заявки на погрузку
                value:
                  requestName: Погрузка/выгрузка автомобиля
                  operationType: Погрузка
                  client: ООО Транс логистика
                  contract: Договор перевалки №455-24
                  location: Экономия
                  manager: Иванов Иван Иванович
                  signer: Сидоров Дмитрий Иванович
                  status: В обработке
                  comment: Добавьте сканы документов
                  autoPass:
                    - 0000789453def1dbc-b554-11ea-a9b0-ac1f6b48c241
                    - 0000789453def1dbc-b554-11ea-a9b0-ac1f6b48c242
                  cargoList:
                    - 72b61a39-c9a4-4fda-8724-51db2cfb0a6f
                    - 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c242
                    - 4a5b7c3d-6e77-4599-ae6f-dbdd5b36c1b7
              CargoRequestAutoUnloadExample:
                summary: Пример заявки на разгрузку
                value:
                  requestName: Погрузка/выгрузка автомобиля
                  operationType: Разгрузка
                  client: ООО Транс логистика
                  contract: Договор перевалки №455-24
                  location: Экономия
                  manager: Иванов Иван Иванович
                  signer: Сидоров Дмитрий Иванович
                  status: В обработке
                  comment: Добавьте сканы документов
                  autoPass:
                    - 0000789453def1dbc-b554-11ea-a9b0-ac1f6b48c241
                  cargoList:
                    - name: Контейнер CAXU6600984
                      nomenklatura: Контейнер CAXU
                      weight: 38000
                      volume: 67.7
                      length: 13.716
                      width: 2.438
                      height: 2.896
                      quantity: 1
                      cargoType: Контейнер
                      packaging: Отсутствует
                      storageConditions: Открытое
                      hazardClass: '1.2'
                      marka: EE3421-RU
      responses:
        '201':
          description: Заявка успешно создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор созданной заявки
                    example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
                required:
                  - guid
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 400
                message: Invalid request data
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 401
                message: Token has expired
  /requests/auto/{guid}:
    put:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Обновить данные заявки на погрузку/разгрузку автомобиля
      description: Обновляет данные существующей заявки на погрузку или разгрузку грузов автомобиля.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: Уникальный идентификатор заявки
          schema:
            type: string
            format: uuid
      requestBody:
        description: Данные для обновления заявки
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CargoRequestAutoLoad'
                - $ref: '#/components/schemas/CargoRequestAutoUnload'
            examples:
              CargoRequestAutoLoadExample:
                summary: Пример обновления заявки на погрузку автомобиля
                value:
                  requestName: Погрузка/выгрузка автомобиля
                  operationType: Погрузка
                  client: ООО Транс логистика
                  contract: Договор перевалки №455-24
                  location: Экономия
                  manager: Иванов Иван Иванович
                  signer: Сидоров Дмитрий Иванович
                  status: Утверждена
                  comment: Срочные изменения
                  autoVisitGuids:
                    - 0000789453def1dbc-b554-11ea-a9b0-ac1f6b48c241
                    - 0000789453def1dbc-b554-11ea-a9b0-ac1f6b48c242
                  cargoList:
                    - 72b61a39-c9a4-4fda-8724-51db2cfb0a6f
                    - 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c242
                    - 4a5b7c3d-6e77-4599-ae6f-dbdd5b36c1b7
              CargoRequestAutoUnloadExample:
                summary: Пример обновления заявки на разгрузку автомобиля
                value:
                  requestName: Погрузка/выгрузка автомобиля
                  operationType: Разгрузка
                  client: ООО Транс логистика
                  contract: Договор перевалки №455-24
                  location: Экономия
                  manager: Иванов Иван Иванович
                  signer: Сидоров Дмитрий Иванович
                  status: Утверждена
                  comment: Срочные изменения
                  autoVisitGuids:
                    - 0000789453def1dbc-b554-11ea-a9b0-ac1f6b48c241
                  cargoList:
                    - name: Контейнер CAXU6600984
                      nomenklatura: Контейнер CAXU
                      weight: 38000
                      volume: 67.7
                      length: 13.716
                      width: 2.438
                      height: 2.896
                      quantity: 1
                      cargoType: Контейнер
                      packaging: Отсутствует
                      storageConditions: Открытое
                      hazardClass: '1.2'
                      marka: EE3421-RU
      responses:
        '200':
          description: Заявка успешно обновлена
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор обновленной заявки
                    example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
                required:
                  - guid
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 400
                message: Invalid request data
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 401
                message: Token has expired
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 404
                message: Request not found
    delete:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Удалить заявку на погрузку/разгрузку автомобиля
      description: Удаляет существующую заявку на погрузку или разгрузку грузов автомобиля.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: Уникальный идентификатор заявки
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Заявка успешно удалена
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 400
                message: Invalid request data
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 401
                message: Token has expired
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 404
                message: Request not found
  /requests/rail:
    post:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Создать новую заявку на погрузку/разгрузку ЖД вагона
      description: Создает новую заявку на погрузку или разгрузку ЖД вагона.
      security:
        - bearerAuth: []
        - sessionAuth: []
      requestBody:
        description: Данные для создания новой заявки
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CargoRequestRailLoad'
                - $ref: '#/components/schemas/CargoRequestRailUnload'
            examples:
              CargoRequestRailLoadExample:
                summary: Пример заявки на погрузку
                value:
                  requestName: Погрузка/выгрузка ЖД
                  operationType: Погрузка
                  client: ООО Железнодорожная Логистика
                  contract: Договор №789
                  location: СОЛОМБАЛКА
                  manager: Николаев Н.Н.
                  signer: Дмитриев Д.Д.
                  status: Создана
                  comment: Требуется допуск
                  departureStation: СОЛОМБАЛКА
                  wagons: 2
                  cargoList:
                    - 72b61a39-c9a4-4fda-8724-51db2cfb0a6f
                    - 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c242
                    - 4a5b7c3d-6e77-4599-ae6f-dbdd5b36c1b7
              CargoRequestRailUnloadExample:
                summary: Пример заявки на разгрузку
                value:
                  requestName: Погрузка/выгрузка ЖД
                  operationType: Разгрузка
                  client: ООО Железнодорожная Логистика
                  contract: Договор №790
                  location: СОЛОМБАЛКА
                  manager: Николаев Н.Н.
                  signer: Дмитриев Д.Д.
                  status: Создана
                  comment: Обычная разгрузка
                  departureStation: СОЛОМБАЛКА
                  wagons: 2
                  cargoList:
                    - name: Контейнер CAXU6600986
                      nomenklatura: Контейнер CAXU
                      weight: 36000
                      volume: 67.7
                      length: 13.716
                      width: 2.438
                      height: 2.896
                      quantity: 1
                      cargoType: Контейнер
                      packaging: Отсутствует
                      storageConditions: Открытое
                      hazardClass: 1.2
                      marka: EE3423-RU
      responses:
        '201':
          description: Заявка успешно создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор созданной заявки
                    example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
                required:
                  - guid
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 400
                message: Invalid request data
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 401
                message: Token has expired
  /requests/rail/{guid}:
    put:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Обновить данные заявки на погрузку/разгрузку ЖД вагона
      description: Обновляет данные существующей заявки на погрузку или разгрузку ЖД вагона.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: Уникальный идентификатор заявки
          schema:
            type: string
            format: uuid
      requestBody:
        description: Данные для обновления заявки
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/CargoRequestRailLoad'
                - $ref: '#/components/schemas/CargoRequestRailUnload'
            examples:
              CargoRequestRailLoadExample:
                summary: Пример обновления заявки на погрузку ЖД вагона
                value:
                  requestName: Погрузка ЖД
                  operationType: Погрузка
                  client: ООО Железнодорожная Логистика
                  contract: Договор №789
                  location: СОЛОМБАЛКА
                  manager: Николаев Н.Н.
                  signer: Дмитриев Д.Д.
                  status: Одобрено
                  comment: Требуется допуск
                  departureStation: СОЛОМБАЛКА
                  wagons: 2
                  cargoList:
                    - 72b61a39-c9a4-4fda-8724-51db2cfb0a6f
                    - 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c242
                    - 4a5b7c3d-6e77-4599-ae6f-dbdd5b36c1b7
              CargoRequestRailUnloadExample:
                summary: Пример обновления заявки на разгрузку ЖД вагона
                value:
                  requestName: Разгрузка ЖД
                  operationType: Разгрузка
                  client: ООО Железнодорожная Логистика
                  contract: Договор №790
                  location: СОЛОМБАЛКА
                  manager: Николаев Н.Н.
                  signer: Дмитриев Д.Д.
                  status: Одобрено
                  comment: Требуется допуск
                  departureStation: СОЛОМБАЛКА
                  wagons: 2
                  cargoList:
                    - name: Контейнер CAXU6600986
                      nomenklatura: Контейнер CAXU
                      weight: 36000
                      volume: 67.7
                      length: 13.716
                      width: 2.438
                      height: 2.896
                      quantity: 1
                      cargoType: Контейнер
                      packaging: Отсутствует
                      storageConditions: Открытое
                      hazardClass: 1.2
                      marka: EE3423-RU
      responses:
        '200':
          description: Заявка успешно обновлена
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор обновленной заявки
                    example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
                required:
                  - guid
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 400
                message: Invalid request data
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 401
                message: Token has expired
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 404
                message: Request not found
    delete:
      tags:
        - Заявки на погрузку / выгрузку грузов
      summary: Удалить заявку на погрузку/разгрузку ЖД
      description: Удаляет существующую заявку на погрузку или разгрузку грузов ЖД.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: Уникальный идентификатор заявки
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Заявка успешно удалена
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 400
                message: Invalid request data
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 401
                message: Token has expired
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                code: 404
                message: Request not found
  /passes/requests:
    get:
      tags:
        - Заявки на пропуск
      summary: Получить список заявок
      description: >-
        Возвращает список заявок на пропуск с возможностью фильтрации по периоду
        и типу.
      security:
        - bearerAuth: []
        - sessionAuth: []      
      parameters:
        - name: sortBy
          in: query
          description: Поле для сортировки (createdDate, fullName)
          required: false
          schema:
            type: string
            enum:
              - createdDate
              - fullName
        - name: sortOrder
          in: query
          description: Порядок сортировки (asc для возрастания, desc для убывания)
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: startDate
          in: query
          description: Дата начала периода
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: false
          schema:
            type: string
            format: date
        - name: requestName
          in: query
          description: Тип заявки (пешеходный или автомобильный)
          required: false
          schema:
            type: string
            enum:
              - Пешеходный пропуск
              - Автомобильный пропуск
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: true
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество заявок на странице
          required: true
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список заявок успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество заявок
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество заявок на странице
                  requests:
                    type: array
                    items:
                      $ref: '#/components/schemas/PassRequest'
                required:
                  - total
                  - page
                  - pageSize
                  - requests
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявки не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Заявки на пропуск
      summary: Создать заявку на пропуск в порт
      description: >-
        Создает новую заявку на пропуск в порт, как для пешеходов (гостей), так
        и для водителей на автомобиле.
      security:
        - bearerAuth: []
        - sessionAuth: []           
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PassRequest'
                - oneOf:
                    - type: object
                      properties:
                        guests:
                          type: array
                          items:
                            $ref: '#/components/schemas/Person'
                      required:
                        - guests
                    - type: object
                      properties:
                        drivers:
                          type: array
                          items:
                            $ref: '#/components/schemas/Driver'
                      required:
                        - drivers
      responses:
        '201':
          description: Заявка успешно создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор созданной заявки
                required:
                  - guid
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /passes/requests/{guid}:
    get:
      tags:
        - Заявки на пропуск
      summary: Получить заявку по GUID
      description: Возвращает данные заявки по ее уникальному идентификатору `guid`.
      security:
        - bearerAuth: []
        - sessionAuth: []      
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор заявки
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Данные заявки успешно получены
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PassRequest'
                  - oneOf:
                      - type: object
                        properties:
                          guests:
                            type: array
                            items:
                              $ref: '#/components/schemas/Person'
                        required:
                          - guests
                      - type: object
                        properties:
                          drivers:
                            type: array
                            items:
                              $ref: '#/components/schemas/Driver'
                        required:
                          - drivers
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Заявки на пропуск
      summary: Обновить заявку на пропуск
      description: Обновляет данные существующей заявки на пропуск.
      security:
        - bearerAuth: []
        - sessionAuth: []           
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор заявки
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/PassRequest'
                - oneOf:
                    - type: object
                      properties:
                        guests:
                          type: array
                          items:
                            $ref: '#/components/schemas/Person'
                      required:
                        - guests
                    - type: object
                      properties:
                        drivers:
                          type: array
                          items:
                            $ref: '#/components/schemas/Driver'
                      required:
                        - drivers
      responses:
        '200':
          description: Заявка успешно обновлена
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PassRequest'
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /passes/requests/visits:
    get:
      tags:
        - Заявки на пропуск
      summary: Получить список целей визитов
      description: Возвращает полный список целей визитов.
      security:
        - bearerAuth: []
        - sessionAuth: []      
      responses:
        '200':
          description: Список целей визитов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  purposes:
                    type: array
                    items:
                      type: object
                      properties:
                        guid:
                          type: string
                          description: Уникальный идентификатор цели визита
                          example: 0000789453def1dbc-b554-11ea-a9b0-ac1f6b48c241
                        group:
                          type: string
                          description: Группа цели визита
                          example: Обслуживание
                        name:
                          type: string
                          description: Наименование цели визита
                          example: Перечень работ по обслуживанию судов
                        isGroup:
                          type: boolean
                          description: Группа или элемент
                          example: false
                      required:
                        - guid
                        - group
                        - name
                        - isGroup
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cargoes:
    get:
      tags:
        - Грузы клиента
      summary: >-
        Получить информацию о наличии груза клиента на складских комплексах
        порта
      description: >-
        Возвращает информацию о наличии груза клиента на складских комплексах и
        складских зонах порта на указанную дату с пагинацией.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: date
          in: query
          required: false
          description: Дата проверки наличия груза (по умолчанию текущая дата)
          schema:
            type: string
            format: date
            example: 10-01-2023
            default: Текущая дата
        - name: warehouse
          in: query
          required: false
          description: Складской комплекс
          schema:
            type: string
            example: Складской комплекс 1
        - name: page
          in: query
          required: true
          description: Номер страницы для пагинации
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          required: true
          description: Количество записей на странице
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Информация о наличии груза успешно получена
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество записей
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество записей на странице
                  cargoAvailability:
                    type: array
                    items:
                      type: object
                      properties:
                        warehouse:
                          type: string
                          description: Складской комплекс
                          example: Складской комплекс 1
                        warehouseZone:
                          type: string
                          description: Складская зона
                          example: Зона A
                        cargoes:
                          type: array
                          items:
                            $ref: '#/components/schemas/Cargo'
                required:
                  - total
                  - page
                  - pageSize
                  - cargoAvailability
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cargoes/acts:
    get:
      tags:
        - Грузы клиента
      summary: Получить информацию об остатках грузов клиента по Приемным актам.
      description: >-
        Возвращает информацию об остатках груза клиента на складских комплексах
        и складских зонах порта.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: terminal
          in: query
          required: false
          description: Терминал порта
          schema:
            type: string
            example: Экономия
        - name: warehouse
          in: query
          required: false
          description: Складской комплекс
          schema:
            type: string
            example: СК1
        - name: warehouseZone
          in: query
          required: false
          description: Складская зона
          schema:
            type: string
            example: А25
        - name: page
          in: query
          required: true
          description: Номер страницы для пагинации
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          required: true
          description: Количество записей на странице
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Информация о наличии груза успешно получена
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество записей
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество записей на странице
                  documents:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReceivingCommon'
                required:
                  - total
                  - page
                  - pageSize
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cargoes/acts/{guid}:
    get:
      tags:
        - Грузы клиента
      summary: Получить документ приемный акт со списком грузов.
      description: Возвращает документ приемный акт порта.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор Приемного акта порта
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Информация о приемном акте успешно получена
          content:
            application/json:
              schema:
                type: object
                properties:
                  document:
                    $ref: '#/components/schemas/ReceivingDocument'
                required:
                  - total
                  - page
                  - pageSize
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cargoes/{guid}:
    get:
      tags:
        - Грузы клиента
      summary: Получить информацию о единице груза
      description: >-
        Возвращает информацию о единице груза по указанному идентификатору
        `guid`.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: Уникальный идентификатор груза
          schema:
            type: string
            example: cargo123456
      responses:
        '200':
          description: Информация о грузе успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cargo'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Груз не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cargoes/{guid}/photos:
    get:
      tags:
        - Грузы клиента
      summary: Получить фотографии груза
      description: Возвращает список фотографий, приложенных к указанной единице груза.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: Уникальный идентификатор груза
          schema:
            type: string
            example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
      responses:
        '200':
          description: Фотографии груза успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  photos:
                    type: array
                    description: Список фотографий груза
                    items:
                      type: string
                      format: binary
                required:
                  - photos
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Груз не найден или фотографии не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /reports:
    get:
      tags:
        - Отчеты
      summary: Получить список доступных отчетов
      description: Возвращает список отчетов, доступных клиенту.
      security:
        - bearerAuth: []
        - sessionAuth: []
      responses:
        '200':
          description: Список отчетов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  reports:
                    type: array
                    description: Список доступных отчетов
                    items:
                      type: object
                      properties:
                        reportId:
                          type: string
                          example: 9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241
                          description: Уникальный идентификатор отчета
                        reportName:
                          type: string
                          description: Название отчета
                          example: Поступление грузов
                        description:
                          type: string
                          description: Описание отчета
                          example: >-
                            Отчет содержит информацию о всех поступивших грузах
                            за указанный период.
                        filters:
                          type: array
                          description: Доступные фильтры для отчета
                          items:
                            type: string
                required:
                  - reports
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Отчеты не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /reports/incoming:
    get:
      tags:
        - Отчеты
      summary: Получить отчет по поступлению груза в порт
      description: Возвращает отчет по поступлению груза в порт за указанный период.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: false
          schema:
            type: string
            format: date
            example: 01-01-2023
        - name: endDate
          in: query
          description: Дата окончания периода
          required: false
          schema:
            type: string
            format: date
            example: 01-01-2024
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          description: Количество записей на странице
          required: false
          schema:
            type: integer
            example: 20
      responses:
        '200':
          description: Отчет успешно сформирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  reportName:
                    type: string
                    example: Поступление грузов
                    description: Отчет по поступлению груза в порт
                  total:
                    type: integer
                    description: Общее количество записей
                  page:
                    type: integer
                    description: Номер текущей страницы
                  pageSize:
                    type: integer
                    description: Количество записей на странице
                  data:
                    type: array
                    description: Список записей
                    items:
                      type: object
                      properties:
                        client:
                          type: string
                          example: ЛОГИСТИК-ЦЕНТР ООО
                          description: Клиент
                        documentID:
                          type: string
                          example: '000030159'
                          description: Номер приемного акта
                        date:
                          type: string
                          format: date
                          example: 01-01-2024
                          description: Дата приема груза
                        applicationID:
                          type: string
                          example: '00005488'
                          description: Номер заявки клиента
                        transportType:
                          type: string
                          enum:
                            - Автомобиль
                            - Вагон
                            - Судно
                          example: Судно
                          description: Вид сообщения
                        transportName:
                          type: string
                          example: М902СХ29 СКАНИЯ
                          description: Номер транспортного средства
                        transportDocument:
                          type: string
                          example: ПЭ3713/2
                          description: Номер транспортного документа, накладной
                        sender:
                          type: string
                          example: ЦЕНТР ООО
                          description: Грузоотправитель
                        recipient:
                          type: string
                          example: ЛОГИСТИКА ООО
                          description: Грузополучатель
                        package:
                          type: string
                          example: Пакет
                          description: Тара
                        cargo:
                          $ref: '#/components/schemas/Cargo'
                        quantity:
                          type: integer
                          example: 1
                          description: Количество мест
                        weightNetto:
                          type: number
                          format: float
                          example: 2.6
                          description: Вес нетто груза
                        weightTara:
                          type: number
                          format: float
                          example: 2.55
                          description: Вес тары
                        weightBrutto:
                          type: number
                          format: float
                          example: 5.15
                          description: Вес брутто груза
                  totals:
                    type: object
                    description: Общие итоги по отчету
                    properties:
                      totalQuantity:
                        type: integer
                        description: Общее количество мест
                        example: 100
                      totalWeightNetto:
                        type: number
                        format: float
                        description: Общий вес нетто
                        example: 260
                      totalWeightTara:
                        type: number
                        format: float
                        description: Общий вес тары
                        example: 255
                      totalWeightBrutto:
                        type: number
                        format: float
                        description: Общий вес брутто
                        example: 515
                required:
                  - total
                  - page
                  - pageSize
                  - data
                  - totals
        '400':
          description: Неверный запрос. Проверьте параметры
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /passes:
    get:
      tags:
        - Справочник "Пропуска"
      summary: Получить список пропусков
      description: Возвращает список всех пропусков с поддержкой пагинации.
      security:
        - bearerAuth: []
        - sessionAuth: []      
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: true
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество пропусков на странице
          required: true
          schema:
            type: integer
            default: 10
        - name: startDate
          in: query
          description: Дата начала периода
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: false
          schema:
            type: string
            format: date
        - name: passType
          in: query
          description: Тип пропуска
          required: false
          schema:
            type: string
            enum:
              - Пешеходный пропуск
              - Автомобильный пропуск
      responses:
        '200':
          description: Список пропусков успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество пропусков
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество пропусков на странице
                  passes:
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/DriverPass'
                        - $ref: '#/components/schemas/PersonaPass'
                required:
                  - total
                  - page
                  - pageSize
                  - passes
        '400':
          description: Неверный запрос. Отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /passes/{guid}:
    get:
      tags:
        - Справочник "Пропуска"
      summary: Получить пропуск по уникальному идентификатору
      description: Возвращает данные пропуска по его уникальному идентификатору `guid`.
      security:
        - bearerAuth: []
        - sessionAuth: []      
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор пропуска
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Данные пропуска успешно получены
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DriverPass'
                  - $ref: '#/components/schemas/PersonaPass'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Пропуск не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Справочник "Пропуска"
      summary: Обновить данные пропуска
      description: Обновляет данные существующего пропуска.
      security:
        - bearerAuth: []
        - sessionAuth: []           
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор пропуска
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DriverPass'
                - $ref: '#/components/schemas/PersonaPass'
      responses:
        '200':
          description: Пропуск успешно обновлен
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DriverPass'
                  - $ref: '#/components/schemas/PersonaPass'
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Пропуск не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /passes/search:
    get:
      tags:
        - Справочник "Пропуска"
      summary: Поиск пропуска по ФИО
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: query
          name: fio
          required: true
          schema:
            type: string
            description: Полное имя физического лица
      responses:
        '200':
          description: Поиск прошел успешно
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DriverPass'
                  - $ref: '#/components/schemas/PersonaPass'
  /persons:
    get:
      tags:
        - Справочник "Физические лица"
      summary: Получить список физических лиц
      description: Возвращает список физических лиц клиента с возможностью фильтрации.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: pageSize
          in: query
          description: Количество типов заявок на странице
          required: false
          schema:
            type: integer
            default: 10
            example: 10
      responses:
        '200':
          description: Список физических лиц успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество записей
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество записей на странице
                  persons:
                    type: array
                    items:
                      $ref: '#/components/schemas/Person'
                required:
                  - total
                  - page
                  - pageSize
                  - persons
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Справочник "Физические лица"
      summary: Добавить новое физическое лицо
      description: Добавляет новое физическое лицо в справочник клиента.
      security:
        - bearerAuth: []
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: Новое физическое лицо успешно добавлено
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор физического лица
                  message:
                    type: string
                    description: Сообщение об успешном добавлении физического лица
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /persons/{guid}:
    get:
      tags:
        - Справочник "Физические лица"
      summary: Получить данные физического лица
      description: Возвращает данные физического лица по его уникальному идентификатору.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
          description: Уникальный идентификатор физического лица
      responses:
        '200':
          description: Данные физического лица успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Справочник "Физические лица"
      summary: Обновить данные физического лица
      description: Обновляет данные физического лица в справочнике.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
          description: Уникальный идентификатор физического лица
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: Данные физического лица успешно обновлены
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор физического лица
                  message:
                    type: string
                    description: Сообщение об успешном обновлении данных физического лица
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Справочник "Физические лица"
      summary: Удалить физическое лицо
      description: >-
        Удаляет физическое лицо из справочника по его уникальному
        идентификатору.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
          description: Уникальный идентификатор физического лица
      responses:
        '200':
          description: Физическое лицо успешно удалено
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном удалении физического лица
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /persons/search:
    get:
      tags:
        - Справочник "Физические лица"
      summary: Поиск физического лица по ФИО
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: query
          name: fio
          required: true
          schema:
            type: string
            description: Полное имя физического лица
      responses:
        '200':
          description: Поиск прошел успешно
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
  /persons/{guid}/documents:
    parameters:
      - in: path
        name: guid
        required: true
        schema:
          type: string
        description: Уникальный идентификатор физического лица
    get:
      tags:
        - Справочник "Физические лица"
      summary: Получить список документов физического лица
      description: >-
        Возвращает список всех документов, прикрепленных к указанному
        физическому лицу.
      security:
        - bearerAuth: []
        - sessionAuth: []
      responses:
        '200':
          description: Список документов успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Документы не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Справочник "Физические лица"
      summary: Добавить новый документ физического лица
      description: Добавляет новый документ (сканы) к указанному физическому лицу.
      security:
        - bearerAuth: []
        - sessionAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '201':
          description: Документ успешно добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /profile:
    get:
      tags:
        - Справочник "Профиль клиента"
      summary: Получить данные профиля организации
      security:
        - bearerAuth: []
        - sessionAuth: []
      responses:
        '200':
          description: Данные профиля успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
  /profile/{guid}:
    put:
      tags:
        - Справочник "Профиль клиента"
      summary: Обновить данные профиля организации
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
            format: uuid
            description: Уникальный идентификатор организации
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientProfile'
      responses:
        '200':
          description: Данные профиля организации обновлены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientProfile'
  /profile/{guid}/contracts:
    get:
      tags:
        - Справочник "Профиль клиента"
      summary: Получить список договоров организации
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
            format: uuid
            description: Уникальный идентификатор организации
      responses:
        '200':
          description: Список договоров успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
  /profile/fns:
    get:
      tags:
        - Справочник "Профиль клиента"
      summary: Получить данные контрагента по ИНН с сайта ФНС
      description: Позволяет получить информацию о контрагенте, используя его ИНН
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: query
          name: inn
          required: true
          schema:
            type: string
            description: ИНН контрагента
      responses:
        '200':
          description: Данные контрагента успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
        '400':
          description: Неверный запрос. Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Контрагент не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /senders:
    get:
      tags:
        - Справочник "Грузоотправитель"
      summary: Получить данные о всех грузополучателях
      security:
        - bearerAuth: []
        - sessionAuth: []
      responses:
        '200':
          description: Список грузоотправителей успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contractor'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Справочник "Грузоотправитель"
      summary: Создать нового грузоотправителя
      security:
        - bearerAuth: []
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor'
      responses:
        '201':
          description: Грузоотправитель успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
        '400':
          description: Неверный запрос. Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /senders/{guid}:
    get:
      tags:
        - Справочник "Грузоотправитель"
      summary: Получить данные конкретного грузоотправителя
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
            format: uuid
            description: Уникальный идентификатор грузоотправителя
      responses:
        '200':
          description: Данные грузополучателя успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Грузоотправитель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Справочник "Грузоотправитель"
      summary: Обновить данные грузоотправителя
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
            format: uuid
            description: Уникальный идентификатор грузоотправителя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor'
      responses:
        '200':
          description: Данные грузополучателя успешно обновлены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
        '400':
          description: Неверный запрос. Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Грузополучатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /recipients:
    get:
      tags:
        - Справочник "Грузополучатель"
      summary: Получить данные о всех грузополучателях
      security:
        - bearerAuth: []
        - sessionAuth: []
      responses:
        '200':
          description: Список грузополучателей успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contractor'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Справочник "Грузополучатель"
      summary: Создать нового грузополучателя
      security:
        - bearerAuth: []
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor'
      responses:
        '201':
          description: Грузополучатель успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
        '400':
          description: Неверный запрос. Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /recipients/{guid}:
    get:
      tags:
        - Справочник "Грузополучатель"
      summary: Получить данные конкретного грузополучателя
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
            format: uuid
            description: Уникальный идентификатор грузополучателя
      responses:
        '200':
          description: Данные грузополучателя успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Грузополучатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Справочник "Грузополучатель"
      summary: Обновить данные грузополучателя
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
            format: uuid
            description: Уникальный идентификатор грузополучателя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor'
      responses:
        '200':
          description: Данные грузополучателя успешно обновлены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
        '400':
          description: Неверный запрос. Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Грузополучатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /final-recipients:
    get:
      tags:
        - Справочник "Конечный грузополучатель"
      summary: Получить данные о всех грузополучателях
      security:
        - bearerAuth: []
        - sessionAuth: []
      responses:
        '200':
          description: Список грузополучателей успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contractor'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Справочник "Конечный грузополучатель"
      summary: Создать нового грузополучателя
      security:
        - bearerAuth: []
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor'
      responses:
        '201':
          description: Грузополучатель успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
        '400':
          description: Неверный запрос. Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /final-recipients/{guid}:
    get:
      tags:
        - Справочник "Конечный грузополучатель"
      summary: Получить данные конкретного грузополучателя
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
            format: uuid
            description: Уникальный идентификатор грузополучателя
      responses:
        '200':
          description: Данные грузополучателя успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Грузополучатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Справочник "Конечный грузополучатель"
      summary: Обновить данные грузополучателя
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - in: path
          name: guid
          required: true
          schema:
            type: string
            format: uuid
            description: Уникальный идентификатор грузополучателя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contractor'
      responses:
        '200':
          description: Данные грузополучателя успешно обновлены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contractor'
        '400':
          description: Неверный запрос. Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неавторизованный доступ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Грузополучатель не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /autos:
    get:
      tags:
        - Справочник "Автотранспорт"
      summary: Получить список автотранспортных средств
      description: Возвращает список всех автотранспортных средств с поддержкой пагинации.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: true
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество автотранспортных средств на странице
          required: true
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список автотранспортных средств успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество транспортных средств
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество транспортных средств на странице
                  autos:
                    type: array
                    items:
                      $ref: '#/components/schemas/Auto'
                required:
                  - total
                  - page
                  - pageSize
                  - autos
        '400':
          description: Неверный запрос. Отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Справочник "Автотранспорт"
      summary: Добавить новое автотранспортное средство
      description: Добавляет новое автотранспортное средство в справочник.
      security:
        - bearerAuth: []
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auto'
      responses:
        '201':
          description: Новое автотранспортное средство успешно добавлено
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор автотранспортного средства
                  message:
                    type: string
                    description: >-
                      Сообщение об успешном добавлении автотранспортного
                      средства
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /autos/{guid}:
    get:
      tags:
        - Справочник "Автотранспорт"
      summary: Получить автотранспортное средство по уникальному идентификатору
      description: >-
        Возвращает данные автотранспортного средства по его уникальному
        идентификатору `guid`.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор автотранспортного средства
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Данные автотранспортного средства успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Автотранспортное средство не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Справочник "Автотранспорт"
      summary: Обновить данные автотранспортного средства
      description: Обновляет данные существующего автотранспортного средства.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор автотранспортного средства
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auto'
      responses:
        '200':
          description: Автотранспортное средство успешно обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auto'
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Автотранспортное средство не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Справочник "Автотранспорт"
      summary: Удалить автотранспортное средство
      description: Удаляет автотранспортное средство из справочника.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор автотранспортного средства
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Автотранспортное средство успешно удалено
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные
            некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Автотранспортное средство не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /terminals:
    get:
      tags:
        - Справочник "Терминалы"
      summary: Получить список доступных терминалов
      description: Возвращает список доступных терминалов с их описанием и GUID.
      security:
        - bearerAuth: []
        - sessionAuth: []
      responses:
        '200':
          description: Успешный ответ. Список доступных терминалов.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Terminal'
        '401':
          description: Неавторизованный доступ. Проверьте токен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /terminals/{guid}/map:
    get:
      tags:
        - Справочник "Терминалы"
      summary: Получить карту терминала по GUID
      description: >-
        Возвращает изображение карты и координаты складских зон для указанного
        терминала.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: guid
          in: path
          required: true
          description: GUID терминала
          schema:
            type: string
      responses:
        '200':
          description: Успешный ответ. Картинка карты терминала и координаты складских зон.
          content:
            application/json:
              schema:
                type: object
                properties:
                  terminal:
                    allOf:
                      - $ref: '#/components/schemas/Terminal'
                    description: Параметры терминала
                  mapImage:
                    type: string
                    format: binary
                    description: Изображение карты терминала
                  warehouses:
                    type: array
                    description: Склады и координаты складских зон
                    items:
                      $ref: '#/components/schemas/Warehouse'
        '400':
          description: Неверный запрос. Проверьте передаваемые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Неавторизованный доступ. Проверьте токен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Терминал не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /ports:
    get:
      tags:
        - Справочник "Порты"
      summary: Получить список портов
      description: Возвращает список портов с возможностью фильтрации и пагинации.
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: country
          in: query
          description: Фильтр по стране
          required: false
          schema:
            type: string
          example: Россия
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
            example: 1
        - name: pageSize
          in: query
          description: Количество портов на странице
          required: false
          schema:
            type: integer
            default: 10
            example: 10
      responses:
        '200':
          description: Список портов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество записей
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество записей на странице
                  ports:
                    type: array
                    items:
                      $ref: '#/components/schemas/Port'
                required:
                  - total
                  - page
                  - pageSize
                  - ports
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /ports/search:
    get:
      tags:
        - Справочник "Порты"
      summary: Поиск порта по наименованию
      description: Поиск порта по наименованию
      security:
        - bearerAuth: []
        - sessionAuth: []
      parameters:
        - name: name
          in: query
          description: Наименование порта
          required: true
          schema:
            type: string
          example: Калининград
      responses:
        '200':
          description: Результаты поиска портов успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Port'
        '400':
          description: >-
            Неверный запрос. Отсутствуют необходимые данные или данные некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Истек токен сессии
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
