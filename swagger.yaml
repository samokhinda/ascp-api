openapi: 3.0.1
info:
  title: API ООО "Архангельский морской торговый порт"
  description: |-
    ООО "Архангельский морской торговый порт" предоставляет API для запроса и получения информации о различных аспектах портовой деятельности. API позволяет получить характеристики судов, информацию о прибытии и отправлении в порт, данные по грузам, положения судов флота, а также финансовую информацию.
    Ссылки:
    - [Сайт ООО "АМТП"](https://амтп.рф)
    - [Личный кабинет клиента ООО "АМТП"](https://амтп.рф/#modal-auth-form)
    - [API документация ООО "АМТП"](https://амтп.рф/doc/openapi.yaml)
  
  termsOfService: https://ascp.ru/upload/documents/privacy-policy.pdf
  contact:    
    email: dev@ascp.ru
  version: 1.0.2
servers:
  - url: http://1c-srv.corp.ascp.ru/ugt-dev-7/hs/v2/   

tags:
  - name: Авторизация 
    description: Авторизация
  - name: Управление пользователями
    description: Операции по управлению пользователями системы.

security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    ### Схема для ошибок
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Код ошибки
        message:
          type: string
          description: Сообщение об ошибке
    ### Схема для получения типов заявок   
    RequestType:
      type: object
      properties:
        name:
          type: string
          description: Название типа заявки
        description:
          type: string
          description: Описание типа заявки
      required:
        - name
    
    ### Схема для физического лица 
    Person:
      type: object
      properties:
        fullName:
          type: string
          description: ФИО физического лица
          example: "Шестак Денис Анатольевич"
        birthDate:
          type: string
          format: date
          description: Дата рождения
          example: "1992-12-13"
        gender:
          type: string
          description: Пол
          example: "Мужской"
        position:
          type: string
          description: Должность
          example: "ВОДИТЕЛЬ"
        passport:
          type: object
          properties:
            series:
              type: string
              description: Серия и номер паспорта
              example: "AB 3651652"
            issuedBy:
              type: string
              description: Кем выдан паспорт
              example: "Барановичский ГОВД Брестской обл."
            issueDate:
              type: string
              format: date
              description: Дата выдачи паспорта
              example: "2021-09-24"
        contactInfo:
          type: object
          properties:
            phone:
              type: string
              description: Телефон
              example: "+7 123 456 7890"
            email:
              type: string
              description: Электронная почта
              example: "example@example.com"
      required:
        - fullName
        - birthDate
        - gender
        - position
        - passport
    ### Схема для автомобиля
    Auto:
      type: object
      properties:
        number:
          type: string
          description: Гос. номер автомобиля
          example: "A770E067"
        make:
          type: string
          description: Марка автомобиля
          example: "Toyota"
        model:
          type: string
          description: Модель автомобиля
          example: "Camry"
        owner:
          type: string
          description: Собственник автомобиля
          example: "Иванов Иван Иванович"
        vin:
          type: string
          description: VIN автомобиля
          example: "1HGCM82633A123456"
        color:
          type: string
          description: Цвет автомобиля
          example: "Черный"
        trailer:
          type: object
          description: Информация о прицепе (если имеется)
          properties:
            licensePlate:
              type: string
              description: Гос. номер прицепа
              example: "AK544367"
            make:
              type: string
              description: Марка прицепа
              example: "Schmitz"
            model:
              type: string
              description: Модель прицепа
              example: "S.KO"
            vin:
              type: string
              description: VIN прицепа
              example: "WDB93012345678901"
            color:
              type: string
              description: Цвет прицепа
              example: "Белый"
      required:
        - number
        - licensePlate
        - make
        - owner
    ### Схема для грузового места
    Cargo:
      type: object
      properties:
        guid:
          type: string
          description: Уникальный идентификатор груза
          readOnly: true          
        name:
          type: string
          description: Наименование груза
        weight:
          type: number
          description: Вес груза
        volume:
          type: number
          description: Объем груза
        length:
          type: number
          description: Длина груза
        width:
          type: number
          description: Ширина груза
        height:
          type: number
          description: Высота груза
        quantity:
          type: integer
          description: Количество мест
        cargoType:
          type: string
          description: Тип груза
        packaging:
          type: string
          description: Род упаковки
        storageConditions:
          type: string
          description: Условия хранения
        hazardClass:
          type: string
          description: Класс опасности
      required:
        - name
        - quantity
    ### Схема для услуги
    Service:
      type: object
      properties:
        name:
          type: string
          description: Наименование услуги
          example: "Услуги погрузки-разгрузки"
        cost:
          type: number
          description: Стоимость услуги
          example: 500
      required:
        - name
        - cost
    ### Общие реквизиты заявки 
    RequestCommon:
      type: object
      properties:
        client:
          type: string
          description: Клиент порта
          example: "ООО Транс логистика"
        contract:
          type: string
          description: Договор с клиентом порта
          example: "Договор перевалки №455-24"
        location:
          type: string
          description: Место оказания услуги
          example: "Экономия"
        manager:
          type: string
          description: Ответственный за подготовку документа
          example: "Иванов Иван Иванович"
        signer:
          type: string
          description: Подписант заявки со стороны клиента
          example: "Сидоров Дмитрий Иванович"
        status:
          type: string
          description: Статус заявки
          enum:
            - "Создана"
            - "В обработке"
            - "Одобрена"
            - "Отклонена"
          example: "В обработке"
        comment:
          type: string
          description: Комментарий к заявке
          example: "Добавьте сканы документов"
        createdDate:
          type: string
          format: date-time
          description: Дата и время создания заявки
    ### Полиморфная схема заявки (Request)
    CargoRequest:
      allOf:
        - $ref: '#/components/schemas/RequestCommon'
        - type: object
          properties:
            requestType:
              type: string
              description: Вид операции по заявке
              example: "Обработка судна"              
            requestOperation:
              type: string
              description: Вид операции по заявке
              example: "Погрузка"              
          oneOf:
            - $ref: '#/components/schemas/VesselCargoRequest'
            - $ref: '#/components/schemas/CarCargoRequest'
 
    ### Схема для аккредитации водителя
    DriverAccreditation:
      type: object
      properties:
        accessPeriod:
          type: object
          properties:
            startDate:
              type: string
              format: date
              description: Дата начала аккредитации
              example: "2023-11-01"
            endDate:
              type: string
              format: date
              description: Дата окончания аккредитации
              example: "2023-11-30"
          required:
            - startDate
            - endDate
        location:
          type: string
          description: Терминал, на который разрешен проезд
          enum:
            - "Экономия"
            - "Бакарица"
          example: "Экономия"
        drivers:
          type: array
          items:
            type: object
            properties:
              driver:
                $ref: '#/components/schemas/Person'
              auto:
                $ref: '#/components/schemas/Auto'
            required:
              - driver
              - auto
      required:
        - period
        - location
        - drivers
    ### Схема заявки на ввоз или вывоз груза автомобилем
    CarCargoRequest:
      allOf:
        - $ref: '#/components/schemas/RequestCommon'
        - type: object
          properties:
            guid:
              type: string
              description: Уникальный идентификатор заявки
              readOnly: true
            operation:
              type: string
              description: Вид операции по заявке
              example: "Погрузка"
            period:
              type: object
              description: Дата автовизита
              properties:
                startDate:
                  type: string
                  format: date
                  description: Дата прибытия
                  example: "2023-11-01"
                endDate:
                  type: string
                  format: date
                  description: Дата убытия
                  example: "2023-11-30"
              required:
                - startDate
                - endDate            
            drivertList:
              type: array
              description: Табличная часть со списком грузов к погрузке в заявке
              items:
                $ref: '#/components/schemas/DriverAccreditation'            
            cargoList:
              type: array
              description: Табличная часть со списком грузов к погрузке в заявке
              items:
                $ref: '#/components/schemas/Cargo'
          required:
            - guid
            - operation
            - period
            - drivertList
            - cargoList
    ### Схема заявки на погрузку или выгрузку судна
    VesselCargoRequest:
      allOf:
        - $ref: '#/components/schemas/RequestCommon'
        - type: object
          properties:
            guid:
              type: string
              description: Уникальный идентификатор заявки
              readOnly: true
            operation:
              type: string
              description: Вид операции по заявке
              example: "Погрузка"
            cargoList:
              type: array  
              description: Табличная часть со списком грузов к погрузке в заявке
              items:
                $ref: '#/components/schemas/Cargo'
          required:
            - guid
            - operation
            - cargoList
    ### Схема заявки на погрузку или выгрузку ЖД
    RailCargoRequest:
      allOf:
        - $ref: '#/components/schemas/RequestCommon'
        - type: object
          properties:
            guid:
              type: string
              description: Уникальный идентификатор заявки
              readOnly: true
            operation:
              type: string
              description: Вид операции по заявке
              example: "Погрузка"
            cargoList:
              type: array  
              description: Табличная часть со списком грузов к погрузке в заявке
              items:
                $ref: '#/components/schemas/Cargo'
          required:
            - guid
            - operation
            - cargoList


paths:
  /auth/login:
    post:
      tags:
        - Авторизация
      summary: Авторизация пользователя
      description: >
        Эндпоинт позволяет пользователю авторизоваться в системе, используя логин и пароль, для получения JWT токена.
      security:
        - BasicAuth: []
        - ApiKeyAuth: []         
      responses:
        '200':
          description: Аутентификация прошла успешно. Возвращает JWT токен.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT токен для доступа к API.
                  token_type:
                    type: string
                    default: "Bearer"
                    description: Тип токена.
                  expires_in:
                    type: integer
                    description: Время действия токена в секундах.
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/logout:
    post:
      tags:
        - Авторизация
      summary: Выход из системы
      description: Позволяет пользователю завершить сессию и выйти из системы.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешный выход из системы
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном выходе из системы
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /users/create:
    post:
      tags:
        - Управление пользователями
      summary: Создание нового пользователя
      description: Позволяет администратору создать нового пользователя в системе.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  description: Полное имя пользователя
                position:
                  type: string
                  description: Должность пользователя в организации                  
                email:
                  type: string
                  format: email
                  description: Электронная почта пользователя
                role:
                  type: string
                  description: Роль пользователя в системе
                  enum:
                    - admin
                    - user
                    - manager
                    - guest
              required:
                - fullname
                - position
                - email
                - role
      responses:
        '201':
          description: Новый пользователь успешно создан
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: Уникальный идентификатор созданного пользователя
                  message:
                    type: string
                    description: Сообщение о успешном создании пользователя
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/list:
    get:
      tags:
        - Управление пользователями
      summary: Получение списка пользователей организации
      description: Позволяет получить список всех пользователей, принадлежащих указанной организации.
      security:
        - ApiKeyAuth: []
        - bearerAuth: [] 
      responses:
        '200':
          description: Список пользователей организации успешно получен
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                      description: Уникальный идентификатор пользователя
                    username:
                      type: string
                      description: Имя пользователя для входа в систему
                    email:
                      type: string
                      format: email
                      description: Электронная почта пользователя
                    fullname:
                      type: string
                      description: Полное имя пользователя
                    position:
                      type: string
                      description: Должность пользователя в организации
                    role:
                      type: string
                      description: Роль пользователя в системе
                      enum:
                        - admin
                        - user
                        - manager
                        - guest
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/{userId}:
    delete:
      tags:
        - Управление пользователями
      summary: Удаление пользователя
      description: Позволяет администратору удалить пользователя из системы.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []  
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: Уникальный идентификатор пользователя для удаления
      responses:
        '200':
          description: Пользователь успешно удален
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном удалении пользователя
        '401':
          description: Неверный запрос, отсутствуют необходимые данные или данные некорректны
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Доступ запрещен. 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Управление пользователями
      summary: Получение данных пользователя
      description: Позволяет получить данные пользователя по его уникальному идентификатору.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []  
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: Уникальный идентификатор пользователя для получения данных
      responses:
        '200':
          description: Данные пользователя успешно получены
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: Уникальный идентификатор пользователя
                  fullname:
                    type: string
                    description: Полное имя пользователя
                  username:
                    type: string
                    description: Имя пользователя для входа в систему
                  email:
                    type: string
                    format: email
                    description: Электронная почта пользователя
                  position:
                    type: string
                    description: Должность пользователя в организации
                  lastLogin:
                    type: string
                    format: date-time
                    description: Дата и время 
                  role:
                    type: string
                    description: Роль пользователя в системе
                    enum:
                      - admin
                      - user
                      - manager
                      - guest
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Управление пользователями
      summary: Обновление данных пользователя
      description: Позволяет пользователю обновить свои личные данные.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: Уникальный идентификатор пользователя для обновления данных
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                  description: Новое полное имя пользователя
                email:
                  type: string
                  format: email
                  description: Новая электронная почта пользователя
                position:
                  type: string
                  description: Должность пользователя в организации
                newPassword:
                  type: string
                  description: Новый пароль пользователя                

      responses:
        '200':
          description: Данные пользователя успешно обновлены
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном обновлении данных пользователя
        '403':
          description: Ошибка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /dashboard/ship:
    get:
      tags:
        - Дашборд
      summary: Формирование дашборда по отгрузке судна с грузами клиента
      description: >
        Эндпоинт для формирования дашборда по отгрузке судна с грузами клиента.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по отгрузке и погрузке успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      description: Дата
                    terminals:
                      type: array
                      description: Список терминалов порта с данными о погрузке и выгрузке
                      items:
                        type: object
                        properties:
                          terminal:
                            type: string
                            description: Терминал порта (например, Экономия, Бакарица)
                          load_weight:
                            type: number
                            format: float
                            description: Общий вес погруженных грузов
                          load_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы погрузки
                          unload_weight:
                            type: number
                            format: float
                            description: Общий вес выгруженных грузов
                          unload_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы выгрузки

        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/rail:
    get:
      tags:
        - Дашборд
      summary: Формирование дашборда по отгрузке и погрузке ЖД вагонов с грузами клиента
      description: >
        Эндпоинт для формирования дашборда по отгрузке и погрузке ЖД вагонов с грузами клиента в разрезе терминалов порта.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по отгрузке и погрузке успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      description: Дата
                    terminals:
                      type: array
                      description: Список терминалов порта с данными о погрузке и выгрузке
                      items:
                        type: object
                        properties:
                          terminal:
                            type: string
                            description: Терминал порта (например, Экономия, Бакарица)
                          load_weight:
                            type: number
                            format: float
                            description: Общий вес погруженных грузов
                          load_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы погрузки
                          unload_weight:
                            type: number
                            format: float
                            description: Общий вес выгруженных грузов
                          unload_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы выгрузки
                          processed_wagons:
                            type: integer
                            description: Количество обработанных вагонов
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/auto:
    get:
      tags:
        - Дашборд
      summary: Формирование дашборда по отгрузке и погрузке автомобилей с грузами клиента
      description: >
        Эндпоинт для формирования дашборда по отгрузке и погрузке автомобилей с грузами клиента в разрезе терминалов порта.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по отгрузке и погрузке успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                      description: Дата
                    terminals:
                      type: array
                      description: Список терминалов порта с данными о погрузке и выгрузке
                      items:
                        type: object
                        properties:
                          terminal:
                            type: string
                            description: Терминал порта (например, Экономия, Бакарица)
                          load_weight:
                            type: number
                            format: float
                            description: Общий вес погруженных грузов
                          load_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы погрузки
                          unload_weight:
                            type: number
                            format: float
                            description: Общий вес выгруженных грузов
                          unload_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы выгрузки
                          processed_auto:
                            type: integer
                            description: Количество обработанных автомобилей
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/warehouse:
    get:
      tags:
        - Дашборд
      summary: Отображение количества груза клиента на складских комплексах терминалов порта
      description: >
        Эндпоинт для отображения количества (вес в тоннах и фрахтовых единицах) груза клиента на складских комплексах терминалов порта на определенную дату в виде гистограммы.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: date
          in: query
          description: Дата для отображения данных
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по грузам на складских комплексах успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    terminal:
                      type: string
                      description: Терминал порта (например, Экономия, Бакарица)
                    warehouse:
                      type: array
                      description: Складской комплекс
                      items: 
                        type: object
                        properties:
                          warehouse_zone:
                            type: string
                            description: Складская зона                        
                          cargo_weight:
                            type: number
                            format: float
                            description: Вес груза в тоннах
                          cargo_fe:
                            type: number
                            format: float
                            description: Фрахтовые единицы груза
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /dashboard/container:
    get:
      tags:
        - Дашборд
      summary: Данные о количестве затаренных и растаренных контейнеров клиента
      description: >
        Эндпоинт для предоставления данных для дашборда о количестве затаренных и растаренных контейнеров клиента за период в разрезе терминалов и складских зон порта.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          description: Дата начала периода
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Дата окончания периода
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Данные по контейнерным операциям успешно получены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    terminal:
                      type: string
                      description: Терминал порта (например, Экономия, Бакарица)
                    warehouse:
                      type: array
                      description: Список складских зон терминала с данными о контейнерных операциях
                      items:
                        type: object
                        properties:
                          warehouse_zone:
                            type: string
                            description: Складская зона
                          stuffed_containers:
                            type: integer
                            description: Количество затаренных контейнеров
                          stripped_containers:
                            type: integer
                            description: Количество растаренных контейнеров
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Данные не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /documents/getClientDocuments:
    get:
      tags:
        - Журнал документов
      summary: Получить список документов клиента
      description: Возвращает список документов клиента из журнала БД с поддержкой пагинации.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []  
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество документов на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список документов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество документов
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество документов на странице
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        guid:
                          type: string
                          description: Уникальный идентификатор документа в БД
                          example: "9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241"
                        documentId:
                          type: string
                          description: Регистрационный номер документа
                          example: "0000098212"                          
                        documentName:
                          type: string
                          description: Название документа
                          example: "Приемный акт" 
                        documentType:
                          type: string
                          description: Тип операции
                          example: "Затарка" 
                        comment:
                          type: string
                          description: Комментарий к документу
                          example: "Стандартный груз"
                        attached:
                          type: boolean
                          description: Наличие прикрепленных файлов в документе 
                          example: true                         
                        createdDate:
                          type: string
                          format: date-time
                          description: Дата и время создания заявки
                required:
                  - total
                  - page
                  - pageSize
                  - requests
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Документы не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /journal/documents:
    get:
      tags:
        - Журнал документов
      summary: Получить список документов клиента
      description: Возвращает список документов клиента из журнала БД с поддержкой пагинации.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []  
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество документов на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список документов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество документов
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество документов на странице
                  documents:
                    type: array
                    items:
                      type: object
                      properties:
                        guid:
                          type: string
                          description: Уникальный идентификатор документа в БД
                          example: "9ea51b1f-5f7f-11ea-a9ac-ac1f6b48c241"
                        documentId:
                          type: string
                          description: Регистрационный номер документа
                          example: "0000098212"                          
                        documentName:
                          type: string
                          description: Название документа
                          example: "Приемный акт" 
                        documentType:
                          type: string
                          description: Тип операции
                          example: "Затарка" 
                        comment:
                          type: string
                          description: Комментарий к документу
                          example: "Стандартный груз"
                        attached:
                          type: boolean
                          description: Наличие прикрепленных файлов в документе 
                          example: true                         
                        createdDate:
                          type: string
                          format: date-time
                          description: Дата и время создания заявки
                required:
                  - total
                  - page
                  - pageSize
                  - requests
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Документы не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests/types:
    get:
      tags:
        - Журнал заявок
      summary: Получить все типы заявок
      description: Возвращает список всех типов заявок клиента из базы данных.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      responses:
        '200':
          description: Список типов заявок успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество типов заявок
                  requestTypes:
                    type: array
                    items:
                      $ref: '#/components/schemas/RequestType'
                required:
                  - total
                  - requestTypes
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Типы заявок не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /requests/vessel:
    get:
      tags:
        - Журнал заявок
      summary: Получить список заявок на погрузку/выгрузку судна
      description: Возвращает список заявок на погрузку/выгрузку судна.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество заявок на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список заявок успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество заявок
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество заявок на странице
                  requests:
                    type: array
                    items:
                      $ref: '#/components/schemas/VesselCargoRequest'
                required:
                  - total
                  - page
                  - pageSize
                  - requests
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявки не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Журнал заявок
      summary: Создать новую заявку на погрузку/выгрузку судна
      description: Создает новую заявку на погрузку/выгрузку судна.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: operation
          in: query
          description: Вид операции
          required: true
          schema:
            type: string
            enum: ["Погрузка", "Выгрузка"]
      requestBody:
        description: Данные для создания новой заявки
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VesselCargoRequest'
      responses:
        '201':
          description: Заявка успешно создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор созданной заявки
                required:
                  - guid
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests/vessel/{guid}:
    get:
      tags:
        - Журнал заявок
      summary: Получить заявку на погрузку / выгрузку судна по идентификатору
      description: Возвращает заявку по указанному идентификатору
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор заявки
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Заявка успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VesselCargoRequest'
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /requests/auto:
    get:
      tags:
        - Журнал заявок
      summary: Получить список заявок на погрузку/выгрузку автомобиля
      description: Возвращает список заявок на погрузку/выгрузку автомобиля.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество заявок на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список заявок успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество заявок
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество заявок на странице
                  requests:
                    type: array
                    items:
                      $ref: '#/components/schemas/CarCargoRequest'
                required:
                  - total
                  - page
                  - pageSize
                  - requests
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявки не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Журнал заявок
      summary: Создать новую заявку на погрузку/выгрузку судна
      description: Создает новую заявку на погрузку/выгрузку судна.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: operation
          in: query
          description: Вид операции
          required: true
          schema:
            type: string
            enum: ["Погрузка", "Выгрузка"]
      requestBody:
        description: Данные для создания новой заявки
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarCargoRequest'
      responses:
        '201':
          description: Заявка успешно создана
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    description: Уникальный идентификатор созданной заявки
                required:
                  - guid
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests/auto/{guid}:
    get:
      tags:
        - Журнал заявок
      summary: Получить заявку на погрузку / выгрузку автомобиля по идентификатору
      description: Возвращает заявку по указанному идентификатору
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор заявки
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Заявка успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarCargoRequest'
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /requests/rail:
    get:
      tags:
        - Журнал заявок
      summary: Получить список заявок на погрузку/выгрузку ЖД
      description: Возвращает список заявок на погрузку/выгрузку ЖД.
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество заявок на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список заявок успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество заявок
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество заявок на странице
                  requests:
                    type: array
                    items:
                      $ref: '#/components/schemas/CarCargoRequest'
                required:
                  - total
                  - page
                  - pageSize
                  - requests
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявки не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /requests/rail/{guid}:
    get:
      tags:
        - Журнал заявок
      summary: Получить заявку на погрузку / выгрузку ЖД по идентификатору
      description: Возвращает заявку по указанному идентификатору
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      parameters:
        - name: guid
          in: path
          description: Уникальный идентификатор заявки
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Заявка успешно получена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarCargoRequest'
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
