openapi: 3.0.3
info:
  title: API ООО "Архангельский морской торговый порт"
  description: |-
    ООО "Архангельский морской торговый порт" предоставляет API для запроса и получения информации о различных аспектах портовой деятельности. API позволяет получить характеристики судов, информацию о прибытии и отправлении в порт, данные по грузам, положения судов флота, а также финансовую информацию.
    Ссылки:
    - [Сайт ООО "АМТП"](https://амтп.рф)
    - [Личный кабинет клиента ООО "АМТП"](https://амтп.рф/#modal-auth-form)
    - [API документация ООО "АМТП"](https://амтп.рф/doc/openapi.yaml)
  
  termsOfService: https://ascp.ru/upload/documents/privacy-policy.pdf
  contact:    
    email: dev@ascp.ru
  version: 1.0.2
servers:
  - url: http://gate.ascp.ru/wms/hs/v1/    

tags:
  - name: Ship Information
    description: Характеристики судна. Получить сведения об одном или нескольких судах.
  - name: Port Information
    description: Получить информацию о прибытии и отправлении в определенный порт за определенный период времени.
  - name: Cargo Information
    description: Информация о грузах
  - name: Customer Requests
    description: Заявки клиента 
  - name: Client Information
    description: Информация о клиенте
  - name: Authentication 
    description: Авторизация пользователя

security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Код ошибки
        message:
          type: string
          description: Сообщение об ошибке
    ShipData:
      type: object
      properties:
        ship_id:
          type: string
          description: ID корабля
        ship_name:
          type: string
          description: Название корабля
        imo:
          type: string
          description: IMO номер судна
        callsign:
          type: string
          description: Позывной судна
        ship_type:
          type: string
          description: Тип судна
        dwt:
          type: number
          description: Водоизмещение (DWT)
        teu:
          type: number
          description: Вместимость TEU
        width:
          type: number
          description: Ширина судна
        draft:
          type: number
          description: Осадка судна
        length:
          type: number
          description: Длина судна
        owner:
          type: string
          description: Владелец судна
        flag:
          type: string
          description: Флаг судна
        last_modified_date:
          type: string
          format: date-time
          description: Дата последнего изменения карточки судна        
    ShipPhoto:
      type: object
      properties:
        photo:
          type: string
          format: binary
          description: Фото судна в двоичном формате
        upload_time:
          type: string
          format: date-time
          description: Дата и время добавления фото в БД
        is_main:
          type: boolean
          description: Является ли фото основным для судна
    VesselArrival:
      type: object
      properties:
        vessel_id:
          type: string
          description: ID судозахода
        terminal_id:
          type: string
          description: ID терминала
        terminal_name:
          type: string
          description: Терминал
        berth_id:
          type: string
          description: ID причала
        berth_name:
          type: string
          description: Причал
        ship_id:
          type: string
          description: ID судна
        ship_name:
          type: string
          description: Название судна
        cargo_quantity:
          type: number
          description: Количество груза
        type_prr:
          type: string
          description: Вид ПРР
          enum:
            - Погрузка 
            - Выгрузка
        planned_arrival_date:
          type: string
          format: date-time
          description: Плановая дата прибытия
        actual_arrival_date:
          type: string
          format: date-time
          description: Фактическая дата прибытия
        planned_departure_date:
          type: string
          format: date-time
          description: Плановая дата ухода
        actual_departure_date:
          type: string
          format: date-time
          description: Фактическая дата ухода
        status:
          type: string
          description: Статус судозахода
          enum:
            - Ожидается
            - Прибыл
            - Разгрузка
            - Погрузка
            - Отправляется
            - Ушел
            - Задержан
            - Отменен
            - В пути
    BerthInformation:
      type: object
      properties:
        berth_id:
          type: string
          description: ID причала
        berth_name:
          type: string
          description: Название причала
        terminal_id:
          type: string
          description: ID терминала
        coordinates:
          type: object
          description: Координаты причала на карте
          properties:
            latitude:
              type: number
              description: Широта
            longitude:
              type: number
              description: Долгота
        characteristics:
          type: object
          description: Характеристики причала
          properties:
            length:
              type: number
              description: Длина причала (в метрах)
            depth:
              type: number
              description: Глубина причала (в метрах)
            capacity:
              type: number
              description: Вместимость причала (в тоннах)
    TerminalCharacteristics:
      type: object
      properties:
        terminal_id:
          type: string
          description: Уникальный идентификатор терминала
        terminal_name:
          type: string
          description: Название терминала
        capacity:
          type: number
          description: Вместимость терминала (в контейнерах, тоннах и т.д.)
        throughput:
          type: number
          description: Пропускная способность терминала (в контейнерах в час, тоннах в сутки и т.д.)
        equipment:
          type: array
          items:
            type: string
          description: Список оборудования терминала
        services:
          type: array
          items:
            type: string
          description: Список предоставляемых услуг терминала
        berths:
          type: object
          properties:
            count:
              type: integer
              description: Количество причалов
            length:
              type: number
              description: Протяженность причалов (в метрах)
            draft:
              type: number
              description: Осадка судна (в метрах)
    CargoStatusByRequestNumber:
      type: array
      description: Массив статусов груза
      items:
        type: object
        properties:
          status:
            type: string
            description: Текущий статус груза
            enum:
              - Ожидается
              - Прибыл
              - Разгрузка
              - Хранение
              - Отгрузка
              - Убыл
          timestamp:
            type: string
            format: date-time
            description: Временная метка статуса груза
          comment: 
            type: string
            description: Комментарий по операции с грузом
      required:
        - items
    CargoUnit:
      type: object
      properties:
        # id:
        #   type: string
        #   description: Уникальный идентификатор грузового места
        name:
          type: string
          description: Наименование грузового места
        cargoType:
          type: string
          description: Тип груза
          enum:
            - Насыпной
            - Генеральный
        volume:
          type: number
          format: float
          description: Объем грузового места в кубических метрах (м³)
        weight:
          type: number
          format: float
          description: Вес грузового места в килограммах
        dimensions:
          type: object
          description: Весогабаритные характеристики грузового места
          properties:
            length:
              type: number
              format: float
              description: Длина грузового места в метрах
            width:
              type: number
              format: float
              description: Ширина грузового места в метрах
            height:
              type: number
              format: float
              description: Высота грузового места в метрах
        conditions:
          type: string
          description: Условия хранения груза
        unNumber:
          type: string
          description: Номер ООН для опасных грузов
        dangerClass:
          type: string
          description: Класс опасности груза
        markNumber:
          type: string
          description: Номер пломбы, если есть
        isValuable:
          type: boolean
          description: Признак особо ценного груза      
      required:
        - cargo_type
        - name
        - weight
        - dimensions
    AutoVisit:
      type: object
      properties:
        driver:
          $ref: '#/components/schemas/PersonaData'
        vehicle:
          $ref: '#/components/schemas/AutomobileData'
        direction:
          type: string
          description: Направление движения (ввоз или вывоз)
          enum:
            - ввоз
            - вывоз
        multipleTrips:
          type: boolean
          description: Индикатор нескольких рейсов
        # trailerNumber:
        #   type: string
        #   description: Номер прицепа автомобиля, если применимо          
        timeSlots:
          type: array
          items:
            type: string
            format: date-time
          description: Временные интервалы для автовизитов (таймслоты)      
      required:
        - driver
        - vehicle
        - timeSlots
    PersonaData:
      type: object
      properties:
        fullName:
          type: string
          description: Полное имя
        position:
          type: string
          description: Должность
        dateOfBirth:
          type: string
          format: date
          description: Дата рождения
        sex:
          type: string
          enum:
            - Мужской
            - Женский                
          description: Пол
        passportNumber:
          type: string
          description: Номер паспорта
        registrationAddress:
          type: string
          description: Адрес регистрации
        driverLicense:
          type: string
          description: Номер водительского удостоверения 
        inn:
          type: string
          description: ИНН номер           
        contactDetails:
          type: object
          properties:
            email:
              type: string
              format: email
              description: Электронная почта
            phone:
              type: string
              description: Номер телефона
        docScans:
          type: array
          items:
            type: string
            format: binary
          description: Сканы копий документов посетителей
      required:
        - fullName
        - sex
        - dateOfBirth
        - passportNumber
    AutomobileData:
      type: object
      properties:
        owner:
          type: string
          description: Собственник автомобиля          
        ownershipType: 
          type: string
          enum:
            - Собственность
            - Аренда
            - Лизинг
            - Безвозмездное пользование
            - Совместная собственность супругов      
          description: Тип владения автомобилем

        VinNumber:
          type: string
          description: VIN номер автомобиля
        carNumber:
          type: string
          description: Регистрационный номер автомобиля
        trailerNumber:
          type: string
          description: Регистрационный номер прицепа (если есть)
        carType:
          type: string
          description: Тип автомобиля
        carBrand:
          type: string
          description: Марка автомобиля
        carModel:
          type: string
          description: Модель автомобиля
        carColor:
          type: string
          description: Цвет автомобиля          
      required:
        - carNumber
        - carType
        - carBrand
        - carModel
    PassRequest:
      type: object
      properties:
        clientId:
          type: string
          description: Идентификатор клиента
        passType:
          type: string
          description: Тип пропуска
          enum:
            - Пешеходный
            - Автомобильный
        visitPurpose:
          type: string
          description: Цель визита
        visitor:
          oneOf:
            - $ref: '#/components/schemas/PersonaData'
            - allOf:
                - $ref: '#/components/schemas/AutomobileData'
                - type: object
                  properties:
                    driver:
                      $ref: '#/components/schemas/PersonaData'

          description: Данные о посетителе, либо о водителе с автомобилем
        docScans:
          type: array
          items:
            type: string
            format: binary
          description: Сканы копий паспорта водителя и/или посетителей
        additionalDocuments:
          type: array
          items:
            type: string
            format: binary
          description: Другие документы, если применимо
      required:
        - clientId
        - visitPurpose
        - visitor
        - passType
    CargoRequest:
      type: object
      properties:
        clientId:
          type: string
          description: Идентификатор клиента
        terminal:
          type: string
          description: Название или идентификатор терминала
        contract:
          type: string
          description: Номер договора перевалки
        destinationPort:
          type: string
          description: Название порта назначения
        consignee:
          type: string
          description: Наименование грузополучателя (Контрагента)
        consigneeInPort:
          type: string
          description: Наименование грузополучателя в порту назначения
        signatory:
          type: string
          description: ФИО подписанта заявки
        comment:
          type: string
          description: Комментарий к заявке
        cargoes:
          type: array
          description: Перечень грузов с весогабаритными характеристиками
          items:
            type: object
            properties:   
              cargoUnit:       
                $ref: '#/components/schemas/CargoUnit'
              quantity:
                type: integer
                format: int32
                description: Количество грузовых мест данного типа
              packaging_type:
                type: string
                description: Род упаковки грузового места            
            required:
              - cargoUnit
              - quantity            
        autovisits:
          type: array
          description: Список автовизитов
          items:
            $ref: '#/components/schemas/AutoVisit'
        document_scans:
          type: array
          items:
            type: string
            format: binary
          description: Список сканов документов (транспортные накладные и прочие)
      required:
        - clientId
        - terminal
        - contract
        - destinationPort
        - consignee
        - cargoes
        - autovisits
    PassRequestResponse:
      type: object
      properties:
        passId:
          type: string
          description: Уникальный идентификатор заявки на пропуск
        status:
          type: string
          description: Статус заявки
          enum:
            - Создана
            - В обработке
            - Одобрена
            - Отклонена
      required:
        - passId
        - status
    CargoRequestResponse:
      type: object
      properties:
        requestId:
          type: string
          description: Уникальный идентификатор заявки на ввоз/вывоз груза
        status:
          type: string
          description: Статус заявки
          enum:
            - Согласовано
            - В обработке
            - Отказано
            - Требуется дополнительная информация
      required:
        - requestId
        - status
    ReceivingOrder:
      type: object
      properties:
        clientId:
          type: string
          description: Идентификатор клиента      
        orderId:
          type: string
          description: Номер приёмного акта
        shipper:
          type: string
          description: Грузоотправитель
        consignee:
          type: string
          description: Грузополучатель
        consigneeInPort:
          type: string
          description: Грузополучатель в порту назначения
        storageLocation:
          type: string
          description: Место складирования
        warehouseComplex:
          type: string
          description: Складской комплекс
        brigadeNumber:
          type: string
          description: Номер бригады
        comment:
          type: string
          description: Комментарии и оговорки
        
        cargoesFromClient:
          type: array
          description: Грузы по завке клиента
          items:
            type: object
            properties:
              DocumentNumber:
                type: string
                description: Номер транспортного документа (тн, ждн, коносамента)
              DocumentDate:
                type: string
                format: date
                description: Дата транспортного документа
              transportNumber:
                type: string
                description: Номер авто/вагона, название судна
              cargoName:
                type: string
                description: Наименование груза
              
              byDocuments:
                type: object
                description: Поступило по документам
                properties:
                  type:
                    type: string
                    description: Род упаковки
                  quantity:
                    type: integer
                    description: Количество мест
                  grossWeight:
                    type: number
                    description: Вес брутто, кг
              byFact:
                type: object
                description: Поступило фактически по приемке
                properties:
                  type:
                    type: string
                    description: Род упаковки
                  quantity:
                    type: integer
                    description: Количество мест
                  grossWeight:
                    type: number
                    description: Вес брутто, кг
                  volume:
                    type: number
                    format: float
                    description: Объем, м3
                  freightUnit:
                    type: number
                    format: float
                    description: Фрахтовая единица
        cargoesOnWarehouse:
          type: array
          description: Грузы фактически принятые на склад в портом
          items:
            $ref: '#/components/schemas/CargoUnit'
      required:
        - clientId
        - orderId
        - shipper
        - consignee
        - consigneeInPort
        - storageLocation
        - warehouseComplex
        - brigadeNumber
        - cargoesFromClient
        - cargoesOnWarehouse

paths:
  /ship/findByName:
    get:
      tags: 
        - Ship Information
      summary: Получить характеристики морского судна по названию
      description: Возвращает характеристики морского судна по заданному названию.
      parameters:
        - name: ship_name
          in: query
          description: Название морского судна
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipData'
        '404':
          description: Судно не найдено
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Описание ошибки
  /ship/findById:
    get:
      tags: 
        - Ship Information
      summary: Получить характеристики морского судна по ID
      description: Возвращает характеристики морского судна по заданному ID.
      parameters:
        - name: ship_id
          in: query
          description: ID морского судна
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShipData'
        '404':
          description: Судно не найдено
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Описание ошибки
  /ship/getVessels:
    get:
      tags: 
        - Ship Information
      summary: Получить список всех судов
      description: Возвращает список всех доступных морских судов.
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipData'
        '404':
          description: Суда не найдены
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Описание ошибки          
  /ship/getPhotos:
    get:
      tags: 
        - Ship Information
      summary: Получить все фото судна по ID
      description: Возвращает все фото судна по заданному ID.
      parameters:
        - name: ship_id
          in: query
          description: ID морского судна
          required: true
          schema:
            type: string
        - name: start_date
          in: query
          description: Дата, начиная с которой нужно получить фотографии
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShipPhoto'
        '404':
          description: Судно не найдено
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Описание ошибки          
  /port/portCalls:
    get:
      tags:
        - Port Information
      summary: Получить информацию о судозаходах в указанном порту за указанный период
      description: Возвращает информацию о прибытии и отправлении судов в указанном порту за заданный период времени.
      parameters:
        - name: terminal_id
          in: query
          description: ID терминала
          required: false
          schema:
            type: string
        - name: start_date
          in: query
          description: Начальная дата
          required: true
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          description: Конечная дата
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VesselArrival'
        '404':
          description: Порт не найден     
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Описание ошибки          
  /port/getBerth:
    get:
      tags:
        - Port Information
      summary: Получить информацию о причалах порта
      description: Возвращает информацию о причалах морского порта с указанием координат на Яндекс.Картах и другими характеристиками.
      parameters:
        - name: terminal_id
          in: query
          description: ID терминала
          required: true
          schema:
            type: string
        - name: berth_id
          in: query
          description: ID причала
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BerthInformation'
        '404':
          description: Порт не найден  
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: string
                      description: Описание ошибки          
  /port/getTerminal:
    get:
      tags:
        - Port Information
      summary: Получить информацию о характеристиках терминала порта
      description: Возвращает информацию о характеристиках терминала порта.
      parameters:
        - name: terminal_id
          in: query
          description: ID терминала
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalCharacteristics'
        '404':
          description: Терминал не найден  
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Описание ошибки
  /port/getBerthList:
    get:
      tags:
        - Port Information
      summary: Получить список причалов по ID терминала
      description: Возвращает список всех причалов в указанном терминале порта.
      parameters:
        - name: terminal_id
          in: query
          description: ID терминала
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BerthInformation'
        '404':
          description: Порт не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Описание ошибки
  /port/getTerminalList:
    get:
      tags:
        - Port Information
      summary: Получить список всех терминалов порта
      description: Возвращает список всех терминалов морского порта с их характеристиками.
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TerminalCharacteristics'

  /cargo/getStatusByRequestNumber:
    get:
      tags:
        - Cargo Information
      summary: Получить статус груза по номеру заявки клиента
      description: Возвращает статус груза вместе с временной меткой по номеру заявки клиента.
      parameters:
        - name: request_number
          in: query
          description: Номер заявки клиента на груз
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CargoStatusByRequestNumber'
        '404':
          description: Груз по данному номеру заявки не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Описание ошибки
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Описание ошибки     
  /cargo/getCargoUnitById:
    get:
      tags:
        - Cargo Information
      summary: Получить характеристики грузового места по ID
      description: Возвращает характеристики грузового места по заданному уникальному идентификатору.
      parameters:
        - name: guid
          in: query
          description: Уникальный идентификатор грузового места
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CargoUnit'
        '404':
          description: Грузовое место не найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Неверный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cargo/receivingOrder/{orderId}:
    get:
      tags:
        - Cargo Information
      summary: Получить данные Приемного акта порта по номеру акта
      description: Возвращает данные Приемного акта порта по заданному номеру акта.
      parameters:
        - name: orderId
          in: path
          description: Номер приёмного акта
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Данные Приемного акта успешно получены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivingOrder'
        '404':
          description: Приемный акт не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /cargo/receivingOrders:
    get:
      tags:
        - Cargo Information
      summary: Получить список приемных актов с пагинацией
      description: Возвращает список приемных актов с поддержкой пагинации.
      parameters:
        - name: clientId
          in: query
          description: Идентификатор клиента
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество приемных актов на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список приемных актов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество приемных актов
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество приемных актов на странице
                  receivingOrders:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReceivingOrder'
                required:
                  - total
                  - page
                  - pageSize
                  - receivingOrders
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Приемные акты не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /customer/passRequest:
    post:
      tags:
        - Customer Requests
      summary: Создать заявку на пропуск
      description: Позволяет клиенту создать заявку на пешеходный или автомобильный пропуск для входа на территорию порта.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassRequest'
      parameters:
        - name: access_type
          in: query
          description: Тип заявки ('visitors' для пешеходного пропуска, 'auto' для автомобильного)
          required: true
          schema:
            type: string
            enum:
              - visitors
              - auto      
      responses:
        '200':
          description: Заявка на пропуск успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassRequestResponse'
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /customer/passRequest/{passId}:
    put:
      tags:
        - Customer Requests
      summary: Обновить заявку на пропуск
      description: Позволяет клиенту обновить существующую заявку на пропуск.
      security:
        - bearerAuth: []
      parameters:
        - name: passId
          in: path
          description: Уникальный идентификатор заявки на пропуск
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PassRequest'
      responses:
        '200':
          description: Заявка на пропуск успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PassRequestResponse'
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявка на пропуск не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      tags:
        - Customer Requests
      summary: Удалить заявку на пропуск
      description: Позволяет клиенту удалить существующую заявку на пропуск.
      parameters:
        - name: passId
          in: path
          description: Уникальный идентификатор заявки на пропуск
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Заявка на пропуск успешно удалена
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном удалении
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявка на пропуск не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 
  /customer/passRequests:
    get:
      tags:
        - Customer Requests
      summary: Получить список всех заявок на пропуск клиента
      description: Возвращает список всех заявок клиента на пропуск с поддержкой пагинации.
      security:
        - bearerAuth: []      
      parameters:
        - name: clientId
          in: query
          description: Идентификатор клиента
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Номер страницы
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество заявок на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество заявок на пропуск
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество заявок на странице
                  passRequests:
                    type: array
                    items:
                      $ref: '#/components/schemas/PassRequestResponse'
                required:
                  - total
                  - page
                  - pageSize
                  - passRequests
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявки на пропуск не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /customer/cargoRequest:
    post:
      tags:
        - Customer Requests
      summary: Создать заявку на ввоз/вывоз груза
      description: Позволяет клиенту подать заявку на ввоз или вывоз груза.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CargoRequest'
      responses:
        '200':
          description: Заявка на ввоз/вывоз груза успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CargoRequestResponse'
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /customer/cargoRequest/{requestId}:
    put:
      tags:
        - Customer Requests
      summary: Обновить заявку на ввоз/вывоз груза
      description: Позволяет клиенту обновить существующую заявку на ввоз/вывоз груза.
      security:
        - bearerAuth: []
      parameters:
        - name: requestId
          in: path
          description: Уникальный идентификатор заявки на ввоз/вывоз груза
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CargoRequest'
      responses:
        '200':
          description: Заявка на ввоз/вывоз груза успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CargoRequestResponse'
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявка на ввоз/вывоз груза не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Customer Requests
      summary: Удалить заявку на ввоз/вывоз груза
      description: Позволяет клиенту удалить существующую заявку на ввоз/вывоз груза.
      parameters:
        - name: requestId
          in: path
          description: Уникальный идентификатор заявки на ввоз/вывоз груза
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Заявка на ввоз/вывоз груза успешно удалена
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном удалении
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявка на ввоз/вывоз груза не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /customer/cargoRequestsList:
    get:
      tags:
        - Customer Requests
      summary: Получить список всех заявок клиента на ввоз/вывоз груза
      description: Возвращает список всех заявок клиента на ввоз/вывоз груза с поддержкой пагинации.
      security:
        - bearerAuth: []
      parameters:
        - name: clientId
          in: query
          description: Идентификатор клиента
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Номер страницы
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество заявок на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Успешный запрос
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество заявок
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество заявок на странице
                  cargoRequests:
                    type: array
                    items:
                      $ref: '#/components/schemas/CargoRequestResponse'
                required:
                  - total
                  - page
                  - pageSize
                  - cargoRequests
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Заявки не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /customer/autoVisits:
    get:
      tags:
        - Customer Requests
      summary: Получить список автовизитов с пагинацией
      description: Возвращает список автовизитов с поддержкой пагинации.
      security:
        - bearerAuth: []
      parameters:
        - name: clientId
          in: query
          description: Идентификатор клиента
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Номер страницы для пагинации
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          description: Количество автовизитов на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список автовизитов успешно получен
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: Общее количество автовизитов
                  page:
                    type: integer
                    description: Текущая страница
                  pageSize:
                    type: integer
                    description: Количество автовизитов на странице
                  autoVisits:
                    type: array
                    items:
                      $ref: '#/components/schemas/AutoVisit'
                required:
                  - total
                  - page
                  - pageSize
                  - autoVisits
        '400':
          description: Неверный запрос, отсутствуют необходимые данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Автовизиты не найдены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/login:
    post:
      tags:
        - Authentication 
      summary: Аутентификация пользователя и получение токена
      description: Позволяет пользователю аутентифицироваться и получить JWT для доступа к защищенным ресурсам.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT, используемый для доступа к защищенным ресурсам
        '401':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout:
    post:
      tags:
        - Authentication    
      summary: Выход пользователя из системы
      description: Позволяет пользователю выйти из системы, аннулируя его текущий JWT.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешный выход из системы
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Сообщение об успешном выходе
        '401':
          description: Доступ запрещен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


